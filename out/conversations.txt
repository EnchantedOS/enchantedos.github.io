2:I[5824,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-f1d09126cce1e054.js","195","static/chunks/app/conversations/page-8625ca8ec0b2537b.js"],"Heading"]
3:I[3801,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-f1d09126cce1e054.js","195","static/chunks/app/conversations/page-8625ca8ec0b2537b.js"],"Pre"]
4:I[3801,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-f1d09126cce1e054.js","195","static/chunks/app/conversations/page-8625ca8ec0b2537b.js"],"Code"]
8:I[4052,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-f1d09126cce1e054.js","195","static/chunks/app/conversations/page-8625ca8ec0b2537b.js"],"Feedback"]
9:I[5613,[],""]
a:I[1778,[],""]
5:T726,<span><span style="color: var(--shiki-token-comment)">// Example method names</span></span>
<span><span style="color: var(--shiki-token-function)">getData</span><span style="color: var(--shiki-color-text)">(target: </span><span style="color: var(--shiki-token-string-expression)">&#39;entity&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;block&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;storage&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> targetPosOrUuid: string</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> path</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> string</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> scale</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> number): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">string </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span></span>6:T9a3,<span><span style="color: var(--shiki-token-comment)">// List players without UUIDs</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">playersList</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.listPlayers</span><span style="color: var(--shiki-color-text)">();</span></span>
<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Players online:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> playersList);</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// List players with UUIDs</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">playersListWithUuids</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.listPlayers</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>
<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Players and UUIDs:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> playersListWithUuids);</span></span>
<span></span>7:Tbc8,<span><span style="color: var(--shiki-token-comment)">// Get data about a specific block</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">blockData</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.getData</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;block&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;123 64 123&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Block Data:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> blockData);</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Get data about an entity with UUID</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">entityData</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.getData</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;entity&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;acb123d4-6678-4e21-9abc-d4e56789dbca&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Entity Data:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> entityData);</span></span>
<span></span>0:["VGp9Yej6E9OeVj4huA37N",[[["",{"children":["conversations",{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",{"children":["conversations",{"children":["__PAGE__",{},["$L1",["$","article",null,{"className":"flex h-full flex-col pb-10 pt-16","children":[["$","div",null,{"className":"flex-auto prose dark:prose-invert [html_:where(&>*)]:mx-auto [html_:where(&>*)]:max-w-2xl [html_:where(&>*)]:lg:mx-[calc(50%-min(50%,theme(maxWidth.lg)))] [html_:where(&>*)]:lg:max-w-3xl","children":[["$","h1",null,{"children":"List and Information"}],"\n",["$","p",null,{"children":"Dive into the insights and details of your Minecraft world with the \"List and Information\" category of the \"Enchanted\" API. Easily list players and retrieve valuable data, providing an overview of in-game entities and player status."}],"\n",["$","$L2",null,{"level":2,"id":"player-and-entity-information-methods","children":"Player and Entity Information Methods"}],"\n",["$","h3",null,{"children":"List Players"}],"\n",["$","p",null,{"children":"Retrieve a list of all players on the server."}],"\n",["$","$L3",null,{"language":"typescript","code":"listPlayers(uuids: boolean = false): Promise<string>\n","children":["$","$L4",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-token-function)\">listPlayers</span><span style=\"color: var(--shiki-color-text)\">(uuids: boolean </span><span style=\"color: var(--shiki-token-keyword)\">=</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">false</span><span style=\"color: var(--shiki-color-text)\">): </span><span style=\"color: var(--shiki-token-constant)\">Promise</span><span style=\"color: var(--shiki-token-keyword)\">&lt;</span><span style=\"color: var(--shiki-color-text)\">string</span><span style=\"color: var(--shiki-token-keyword)\">&gt;</span></span>\n<span></span>"}]}],"\n",["$","h3",null,{"children":"Entity Information (e.g., Entities, Blocks)"}],"\n",["$","p",null,{"children":"Query detailed information about entities and blocks in the game."}],"\n",["$","$L3",null,{"language":"typescript","code":"// Example method names\ngetData(target: 'entity' | 'block' | 'storage', targetPosOrUuid: string, path?: string, scale?: number): Promise<string | undefined>\n","children":["$","$L4",null,{"className":"language-typescript","children":"$5"}]}],"\n",["$","h4",null,{"children":"Example Usage"}],"\n",["$","h5",null,{"children":"List Players"}],"\n",["$","p",null,{"children":"Get a list of all players currently online:"}],"\n",["$","$L3",null,{"language":"typescript","code":"// List players without UUIDs\nconst playersList = await api.listPlayers();\nconsole.log('Players online:', playersList);\n\n// List players with UUIDs\nconst playersListWithUuids = await api.listPlayers(true);\nconsole.log('Players and UUIDs:', playersListWithUuids);\n","children":["$","$L4",null,{"className":"language-typescript","children":"$6"}]}],"\n",["$","h5",null,{"children":"Entity Information"}],"\n",["$","p",null,{"children":"Fetch and display information about a specific entity:"}],"\n",["$","$L3",null,{"language":"typescript","code":"// Get data about a specific block\nconst blockData = await api.getData('block', '123 64 123');\nconsole.log('Block Data:', blockData);\n\n// Get data about an entity with UUID\nconst entityData = await api.getData('entity', 'acb123d4-6678-4e21-9abc-d4e56789dbca');\nconsole.log('Entity Data:', entityData);\n","children":["$","$L4",null,{"className":"language-typescript","children":"$7"}]}],"\n",["$","h3",null,{"children":"Utility"}],"\n",["$","p",null,{"children":"The \"List and Information\" category also features utility methods that can be extremely powerful when creating plugins that need to perform read operations on the numerous entities that exist within the Minecraft server."}]]}],["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl","children":["$","$L8",null,{}]}]]}],null]]},["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","conversations","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,"$Lb",null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2c7f4917f1b24ecd.css","precedence":"next","crossOrigin":""}]],"$Lc"]]]]
c:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Enchanted Server Documentation"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"48x48"}]]
1:null
d:I[4840,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","749","static/chunks/749-4ef8ad3dce936bad.js","536","static/chunks/536-654abe48faf78f66.js","841","static/chunks/841-f1d09126cce1e054.js","185","static/chunks/app/layout-453049d8579f59bc.js"],"Providers"]
e:I[8733,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","749","static/chunks/749-4ef8ad3dce936bad.js","536","static/chunks/536-654abe48faf78f66.js","841","static/chunks/841-f1d09126cce1e054.js","185","static/chunks/app/layout-453049d8579f59bc.js"],"Layout"]
f:I[5250,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-f1d09126cce1e054.js","195","static/chunks/app/conversations/page-8625ca8ec0b2537b.js"],""]
b:["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$Ld",null,{"children":["$","div",null,{"className":"w-full","children":["$","$Le",null,{"allSections":{"/":[{"title":"Guides","id":"guides"},{"title":"Resources","id":"resources"}],"/attachments":[{"title":"The advancement Model","id":"the-advancement-model"},{"title":"The attribute Model","id":"the-attribute-model"}],"/contacts":[{"title":"Game Modes","id":"game-modes"},{"title":"Game Rules","id":"game-rules"}],"/authentication":[{"title":"Basic authentication","id":"basic-authentication"},{"title":"OAuth2 with bearer token","id":"o-auth2-with-bearer-token"},{"title":"Using an SDK","id":"using-an-sdk"}],"/conversations":[{"title":"Player and Entity Information Methods","id":"player-and-entity-information-methods"}],"/errors":[{"title":"Status codes","id":"status-codes"},{"title":"Error types","id":"error-types"}],"/groups":[{"title":"The group model","id":"the-group-model"},{"title":"List all groups","id":"list-all-groups","tag":"GET","label":"/v1/groups"},{"title":"Create a group","id":"create-a-group","tag":"POST","label":"/v1/groups"},{"title":"Retrieve a group","id":"retrieve-a-group","tag":"GET","label":"/v1/groups/:id"},{"title":"Update a group","id":"update-a-group","tag":"PUT","label":"/v1/groups/:id"},{"title":"Delete a group","id":"delete-a-group","tag":"DELETE","label":"/v1/groups/:id"}],"/messages":[{"title":"The message model","id":"the-message-model"},{"title":"List all messages","id":"list-all-messages","tag":"GET","label":"/v1/messages"},{"title":"Send a message","id":"send-a-message","tag":"POST","label":"/v1/messages"},{"title":"Retrieve a message","id":"retrieve-a-message","tag":"GET","label":"/v1/messages/:id"},{"title":"Update a message","id":"update-a-message","tag":"PUT","label":"/v1/messages/:id"},{"title":"Delete a message","id":"delete-a-message","tag":"DELETE","label":"/v1/messages/:id"}],"/pagination":[{"title":"Example using cursors","id":"example-using-cursors"}],"/webhooks":[{"title":"Registering webhooks","id":"registering-webhooks"},{"title":"Consuming webhooks","id":"consuming-webhooks"},{"title":"Event types","id":"event-types"},{"title":"Security","id":"security"}],"/sdks":[{"title":"Official libraries","id":"official-libraries"}],"/quickstart":[{"title":"Choose your client","id":"choose-your-client"},{"title":"Making your first API request","id":"making-your-first-api-request"},{"title":"What's next?","id":"whats-next"}]},"children":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"absolute inset-0 -z-10 mx-0 max-w-none overflow-hidden","children":["$","div",null,{"className":"absolute left-1/2 top-0 ml-[-38rem] h-[25rem] w-[81.25rem] dark:[mask-image:linear-gradient(white,transparent)]","children":[["$","div",null,{"className":"absolute inset-0 bg-gradient-to-r from-[#fff] to-[#fff] opacity-40 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-[#000]/30 dark:to-[#000]/30 dark:opacity-100","children":["$","svg",null,{"aria-hidden":"true","className":"absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5","children":[["$","defs",null,{"children":["$","pattern",null,{"id":":S1:","width":72,"height":56,"patternUnits":"userSpaceOnUse","x":-12,"y":4,"children":["$","path",null,{"d":"M.5 56V.5H72","fill":"none"}]}]}],["$","rect",null,{"width":"100%","height":"100%","strokeWidth":0,"fill":"url(#:S1:)"}],["$","svg",null,{"x":-12,"y":4,"className":"overflow-visible","children":[["$","rect","4-3",{"strokeWidth":"0","width":73,"height":57,"x":288,"y":168}],["$","rect","2-1",{"strokeWidth":"0","width":73,"height":57,"x":144,"y":56}],["$","rect","7-3",{"strokeWidth":"0","width":73,"height":57,"x":504,"y":168}],["$","rect","10-6",{"strokeWidth":"0","width":73,"height":57,"x":720,"y":336}]]}]]}]}],["$","svg",null,{"viewBox":"0 0 1113 440","aria-hidden":"true","className":"absolute left-1/2 top-0 ml-[-19rem] w-[69.5625rem] fill-white blur-[26px] dark:hidden","children":["$","path",null,{"d":"M.016 439.5s-9.5-300 434-300S882.516 20 882.516 20V0h230.004v439.5H.016Z"}]}]]}]}],["$","div",null,{"className":"mx-auto flex h-full max-w-xl flex-col items-center justify-center py-16 text-center","children":[["$","p",null,{"className":"text-sm font-semibold text-zinc-900 dark:text-white","children":"404"}],["$","h1",null,{"className":"mt-2 text-2xl font-bold text-zinc-900 dark:text-white","children":"Page not found"}],["$","p",null,{"className":"mt-2 text-base text-zinc-600 dark:text-zinc-400","children":"Sorry, we couldn’t find the page you’re looking for."}],["$","$Lf",null,{"className":"inline-flex gap-0.5 justify-center overflow-hidden text-sm font-medium transition rounded-sm bg-zinc-900 py-1 px-3 text-white hover:bg-zinc-700 dark:bg-fuchsia-400/10 dark:text-fuchsia-400 dark:ring-1 dark:ring-inset dark:ring-fuchsia-400/20 dark:hover:bg-fuchsia-400/10 dark:hover:text-fuchsia-300 dark:hover:ring-fuchsia-300 mt-8","href":"/","children":[false,"Back to docs",["$","svg",null,{"viewBox":"0 0 20 20","fill":"none","aria-hidden":"true","className":"mt-0.5 h-5 w-5 -mr-1","children":["$","path",null,{"stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","d":"m11.5 6.5 3 3.5m0 0-3 3.5m3-3.5h-9"}]}]]}]]}]],"notFoundStyles":[],"styles":null}]}]}]}]}]}]
