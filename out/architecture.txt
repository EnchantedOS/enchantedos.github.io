2:I[5824,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-15946dcd10b62610.js","871","static/chunks/app/architecture/page-20e56f146fd98009.js"],"Heading"]
3:I[3801,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-15946dcd10b62610.js","871","static/chunks/app/architecture/page-20e56f146fd98009.js"],"Pre"]
4:I[3801,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-15946dcd10b62610.js","871","static/chunks/app/architecture/page-20e56f146fd98009.js"],"Code"]
6:I[3801,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-15946dcd10b62610.js","871","static/chunks/app/architecture/page-20e56f146fd98009.js"],"CodeGroup"]
f:I[5250,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-15946dcd10b62610.js","871","static/chunks/app/architecture/page-20e56f146fd98009.js"],""]
10:I[4052,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-15946dcd10b62610.js","871","static/chunks/app/architecture/page-20e56f146fd98009.js"],"Feedback"]
11:I[5613,[],""]
12:I[1778,[],""]
5:T81c,<span><span style="color: var(--shiki-color-text)">┌─────────────────┐      ┌─────────────────┐      ┌─────────────────┐</span></span>
<span><span style="color: var(--shiki-color-text)">│  Minecraft      │      │    Enchanted    │      │     Deno </span><span style="color: var(--shiki-token-constant)">KV</span><span style="color: var(--shiki-color-text)">     │</span></span>
<span><span style="color: var(--shiki-color-text)">│  Fabric Plugin  │</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">────</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">│     Server      │</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">────</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">│    Database     │</span></span>
<span><span style="color: var(--shiki-color-text)">└─────────────────┘      └─────────────────┘      └─────────────────┘</span></span>
<span><span style="color: var(--shiki-color-text)">                               ▲</span></span>
<span><span style="color: var(--shiki-color-text)">                               │</span></span>
<span><span style="color: var(--shiki-color-text)">                               ▼</span></span>
<span><span style="color: var(--shiki-color-text)">                        ┌─────────────────┐</span></span>
<span><span style="color: var(--shiki-color-text)">                        │    Modules      │</span></span>
<span><span style="color: var(--shiki-color-text)">                        └─────────────────┘</span></span>
<span></span>7:T108f,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Module</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ExampleModule&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">version</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1.0.0&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">})</span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ExampleModule</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Event</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player_joined&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">handleJoin</span><span style="color: var(--shiki-color-text)">(context</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ScriptContext</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-token-comment)">// Event handler implementation</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;example&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">handleCommand</span><span style="color: var(--shiki-color-text)">(context</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ScriptContext</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-token-comment)">// Command handler implementation</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Socket</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;example_message&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">handleSocket</span><span style="color: var(--shiki-color-text)">(context</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ScriptContext</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-token-comment)">// Socket message handler</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>8:T64e,<span><span style="color: var(--shiki-token-comment)">// Modules are automatically registered on startup</span></span>
<span><span style="color: var(--shiki-token-comment)">// and can be hot-reloaded during development</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">moduleManager</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ModuleManager</span><span style="color: var(--shiki-color-text)">();</span></span>
<span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">moduleManager</span><span style="color: var(--shiki-token-function)">.loadModules</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;./modules&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">moduleManager</span><span style="color: var(--shiki-token-function)">.startModules</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>9:T604,<span><span style="color: var(--shiki-color-text)">┌─────────────────┐      ┌─────────────────┐</span></span>
<span><span style="color: var(--shiki-color-text)">│    Module </span><span style="color: var(--shiki-token-constant)">A</span><span style="color: var(--shiki-color-text)">     │      │    Module </span><span style="color: var(--shiki-token-constant)">B</span><span style="color: var(--shiki-color-text)">     │</span></span>
<span><span style="color: var(--shiki-color-text)">└───────┬─────────┘      └────────┬────────┘</span></span>
<span><span style="color: var(--shiki-color-text)">        │                         │</span></span>
<span><span style="color: var(--shiki-color-text)">        ▼                         ▼</span></span>
<span><span style="color: var(--shiki-color-text)">┌─────────────────────────────────────────┐</span></span>
<span><span style="color: var(--shiki-color-text)">│              Deno </span><span style="color: var(--shiki-token-constant)">KV</span><span style="color: var(--shiki-color-text)"> Store              │</span></span>
<span><span style="color: var(--shiki-color-text)">└─────────────────────────────────────────┘</span></span>
<span></span>a:Td92,<span><span style="color: var(--shiki-token-comment)">// Plugin captures Minecraft events</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-keyword)">Inject</span><span style="color: var(--shiki-color-text)">(method </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;onPlayerJoin&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> at </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> @</span><span style="color: var(--shiki-token-keyword)">At</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;HEAD&quot;</span><span style="color: var(--shiki-color-text)">))</span></span>
<span><span style="color: var(--shiki-token-keyword)">private</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">void</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">handlePlayerJoin(</span><span style="color: var(--shiki-token-keyword)">PlayerEntity</span><span style="color: var(--shiki-token-function)"> player)</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-token-comment)">// Send event to WebSocket server</span></span>
<span><span style="color: var(--shiki-token-constant)">websocket</span><span style="color: var(--shiki-token-punctuation)">.</span><span style="color: var(--shiki-token-function)">send</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">    type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;player_joined&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    data</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">        playerId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">player</span><span style="color: var(--shiki-token-punctuation)">.</span><span style="color: var(--shiki-token-function)">getUuid</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        playerName</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">player</span><span style="color: var(--shiki-token-punctuation)">.</span><span style="color: var(--shiki-token-function)">getName</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-color-text)">    }</span></span>
<span><span style="color: var(--shiki-color-text)">});</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>b:T5a4,<span><span style="color: var(--shiki-token-comment)">// Enchanted server receives and processes events</span></span>
<span><span style="color: var(--shiki-token-constant)">server</span><span style="color: var(--shiki-token-function)">.on</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player_joined&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> (data) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-token-comment)">// Dispatch to relevant modules</span></span>
<span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">moduleManager</span><span style="color: var(--shiki-token-function)">.dispatch</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player_joined&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> data);</span></span>
<span><span style="color: var(--shiki-color-text)">});</span></span>
<span></span>c:T468,<span><span style="color: var(--shiki-token-constant)">1.</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">JWT</span><span style="color: var(--shiki-color-text)"> Authentication for </span><span style="color: var(--shiki-token-constant)">API</span><span style="color: var(--shiki-token-keyword)">/</span><span style="color: var(--shiki-color-text)">WebSocket</span></span>
<span><span style="color: var(--shiki-token-constant)">2.</span><span style="color: var(--shiki-color-text)"> Permission</span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)">based access control</span></span>
<span><span style="color: var(--shiki-token-constant)">3.</span><span style="color: var(--shiki-color-text)"> Module isolation</span></span>
<span><span style="color: var(--shiki-token-constant)">4.</span><span style="color: var(--shiki-color-text)"> Rate limiting</span></span>
<span><span style="color: var(--shiki-token-constant)">5.</span><span style="color: var(--shiki-color-text)"> Input validation</span></span>
<span></span>d:T6cd,<span><span style="color: var(--shiki-color-text)">┌──────────────┐     ┌──────────────┐     ┌──────────────┐</span></span>
<span><span style="color: var(--shiki-color-text)">│   Minecraft  │     │  Enchanted   │     │  Deno </span><span style="color: var(--shiki-token-constant)">KV</span><span style="color: var(--shiki-color-text)">     │</span></span>
<span><span style="color: var(--shiki-color-text)">│    Event     │────</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">│   Module     │────</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">│   Storage    │</span></span>
<span><span style="color: var(--shiki-color-text)">└──────────────┘     └──────────────┘     └──────────────┘</span></span>
<span><span style="color: var(--shiki-color-text)">                           │</span></span>
<span><span style="color: var(--shiki-color-text)">                           ▼</span></span>
<span><span style="color: var(--shiki-color-text)">                    ┌──────────────┐</span></span>
<span><span style="color: var(--shiki-color-text)">                    │   Command    │</span></span>
<span><span style="color: var(--shiki-color-text)">                    │   Response   │</span></span>
<span><span style="color: var(--shiki-color-text)">                    └──────────────┘</span></span>
<span></span>e:T997,<span><span style="color: var(--shiki-token-constant)">1.</span><span style="color: var(--shiki-color-text)"> Create</span><span style="color: var(--shiki-token-keyword)">/</span><span style="color: var(--shiki-color-text)">modify </span><span style="color: var(--shiki-token-keyword)">module</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">file</span></span>
<span><span style="color: var(--shiki-color-text)">2. </span><span style="color: var(--shiki-token-function)">Hot</span><span style="color: var(--shiki-color-text)">-</span><span style="color: var(--shiki-token-function)">reload</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">automatically</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">triggers</span></span>
<span><span style="color: var(--shiki-color-text)">3. </span><span style="color: var(--shiki-token-function)">New</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">module</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">version</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">loaded</span></span>
<span><span style="color: var(--shiki-color-text)">4. </span><span style="color: var(--shiki-token-function)">Old</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">instance</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">gracefully</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">terminated</span></span>
<span><span style="color: var(--shiki-color-text)">5. </span><span style="color: var(--shiki-token-function)">State</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">preserved</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Deno</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">KV</span></span>
<span></span>0:["m6CdOmFbkUcxvfzSbSfo9",[[["",{"children":["architecture",{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",{"children":["architecture",{"children":["__PAGE__",{},["$L1",["$","article",null,{"className":"flex h-full flex-col pb-10 pt-16","children":[["$","div",null,{"className":"flex-auto prose dark:prose-invert [html_:where(&>*)]:mx-auto [html_:where(&>*)]:max-w-2xl [html_:where(&>*)]:lg:mx-[calc(50%-min(50%,theme(maxWidth.lg)))] [html_:where(&>*)]:lg:max-w-3xl","children":[["$","h1",null,{"children":"Architecture"}],"\n",["$","p",null,{"children":"Discover how Enchanted's components work together to provide a powerful and flexible Minecraft server enhancement framework.","className":"lead"}],"\n",["$","$L2",null,{"level":2,"id":"system-overview","children":"System Overview"}],"\n",["$","p",null,{"children":"Enchanted consists of three main components that work together to enhance your Minecraft server:"}],"\n",["$","$L3",null,{"language":"typescript","code":"┌─────────────────┐      ┌─────────────────┐      ┌─────────────────┐\n│  Minecraft      │      │    Enchanted    │      │     Deno KV     │\n│  Fabric Plugin  │<────>│     Server      │<────>│    Database     │\n└─────────────────┘      └─────────────────┘      └─────────────────┘\n                               ▲\n                               │\n                               ▼\n                        ┌─────────────────┐\n                        │    Modules      │\n                        └─────────────────┘\n","children":["$","$L4",null,{"className":"language-typescript","children":"$5"}],"title":"Core Components"}],"\n",["$","$L2",null,{"level":2,"id":"real-time-communication","children":"Real-Time Communication"}],"\n",["$","div",null,{"className":"my-6 flex gap-2.5 rounded-sm border border-fuchsia-500/20 bg-fuchsia-50/50 p-4 leading-6 text-fuchsia-900 dark:border-fuchsia-500/30 dark:bg-fuchsia-500/5 dark:text-fuchsia-200 dark:[--tw-prose-links-hover:theme(colors.fuchsia.300)] dark:[--tw-prose-links:theme(colors.white)]","children":[["$","svg",null,{"viewBox":"0 0 16 16","aria-hidden":"true","className":"mt-1 h-4 w-4 flex-none fill-fuchsia-500 stroke-white dark:fill-fuchsia-200/20 dark:stroke-fuchsia-200","children":[["$","circle",null,{"cx":"8","cy":"8","r":"8","strokeWidth":"0"}],["$","path",null,{"fill":"none","strokeLinecap":"round","strokeLinejoin":"round","strokeWidth":"1.5","d":"M6.75 7.75h1.5v3.5"}],["$","circle",null,{"cx":"8","cy":"4","r":".5","fill":"none"}]]}],["$","div",null,{"className":"[&>:first-child]:mt-0 [&>:last-child]:mb-0","children":["$","p",null,{"children":"The WebSocket server enables instantaneous communication between your Minecraft server and Enchanted modules, with events flowing in real-time through the system."}]}]]}],"\n",["$","p",null,{"children":"The communication flow works as follows:"}],"\n",["$","$L3",null,{"language":"typescript","code":"1. Minecraft Event Occurs\n2. Fabric Plugin Captures Event\n3. WebSocket Message Sent to Enchanted Server\n4. Event Dispatched to Relevant Modules\n5. Modules Process Event and Respond\n6. Response Sent Back to Minecraft Server\n","children":["$","$L4",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-token-constant)\">1.</span><span style=\"color: var(--shiki-color-text)\"> Minecraft Event Occurs</span></span>\n<span><span style=\"color: var(--shiki-token-constant)\">2.</span><span style=\"color: var(--shiki-color-text)\"> Fabric Plugin Captures Event</span></span>\n<span><span style=\"color: var(--shiki-token-constant)\">3.</span><span style=\"color: var(--shiki-color-text)\"> WebSocket Message Sent to Enchanted Server</span></span>\n<span><span style=\"color: var(--shiki-token-constant)\">4.</span><span style=\"color: var(--shiki-color-text)\"> Event Dispatched to Relevant Modules</span></span>\n<span><span style=\"color: var(--shiki-token-constant)\">5.</span><span style=\"color: var(--shiki-color-text)\"> Modules Process Event and Respond</span></span>\n<span><span style=\"color: var(--shiki-token-constant)\">6.</span><span style=\"color: var(--shiki-color-text)\"> Response Sent Back to Minecraft Server</span></span>\n<span></span>"}],"title":"Event Flow"}],"\n",["$","$L2",null,{"level":2,"id":"module-system","children":"Module System"}],"\n",["$","p",null,{"children":"Modules in Enchanted are TypeScript classes that use decorators to define their behavior:"}],"\n",["$","$L6",null,{"children":[["$","$L3",null,{"language":"typescript","code":"@Module({\nname: 'ExampleModule',\nversion: '1.0.0'\n})\nexport class ExampleModule {\n@Event('player_joined')\nasync handleJoin(context: ScriptContext) {\n// Event handler implementation\n}\n\n@Command(['example'])\nasync handleCommand(context: ScriptContext) {\n// Command handler implementation\n}\n\n@Socket('example_message')\nasync handleSocket(context: ScriptContext) {\n// Socket message handler\n}\n}\n","children":["$","$L4",null,{"className":"language-typescript","children":"$7"}],"title":"Basic Module Structure"}],["$","$L3",null,{"language":"typescript","code":"// Modules are automatically registered on startup\n// and can be hot-reloaded during development\nconst moduleManager = new ModuleManager();\nawait moduleManager.loadModules('./modules');\nawait moduleManager.startModules();\n","children":["$","$L4",null,{"className":"language-typescript","children":"$8"}],"title":"Module Registration"}]]}],"\n",["$","$L2",null,{"level":2,"id":"state-management","children":"State Management"}],"\n",["$","p",null,{"children":"Enchanted uses Deno KV for persistent storage across the system:"}],"\n",["$","$L3",null,{"language":"typescript","code":"┌─────────────────┐      ┌─────────────────┐\n│    Module A     │      │    Module B     │\n└───────┬─────────┘      └────────┬────────┘\n        │                         │\n        ▼                         ▼\n┌─────────────────────────────────────────┐\n│              Deno KV Store              │\n└─────────────────────────────────────────┘\n","children":["$","$L4",null,{"className":"language-typescript","children":"$9"}],"title":"State Management"}],"\n",["$","$L2",null,{"level":2,"id":"server-components","children":"Server Components"}],"\n",["$","h3",null,{"children":"WebSocket Server"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Handles real-time communication with Minecraft server"}],"\n",["$","li",null,{"children":"Manages module events and responses"}],"\n",["$","li",null,{"children":"Provides authentication and security"}],"\n"]}],"\n",["$","h3",null,{"children":"Module Manager"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Loads and initializes modules"}],"\n",["$","li",null,{"children":"Manages module lifecycle"}],"\n",["$","li",null,{"children":"Handles hot-reloading during development"}],"\n"]}],"\n",["$","h3",null,{"children":"Event Dispatcher"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Routes events to appropriate modules"}],"\n",["$","li",null,{"children":"Manages event priorities and order"}],"\n",["$","li",null,{"children":"Handles error cases and fallbacks"}],"\n"]}],"\n",["$","$L2",null,{"level":2,"id":"fabric-plugin-integration","children":"Fabric Plugin Integration"}],"\n",["$","p",null,{"children":"The Fabric plugin provides seamless integration with Minecraft:"}],"\n",["$","$L6",null,{"children":[["$","$L3",null,{"language":"java","code":"// Plugin captures Minecraft events\n@Inject(method = \"onPlayerJoin\", at = @At(\"HEAD\"))\nprivate void handlePlayerJoin(PlayerEntity player) {\n// Send event to WebSocket server\nwebsocket.send({\n    type: \"player_joined\",\n    data: {\n        playerId: player.getUuid(),\n        playerName: player.getName()\n    }\n});\n}\n","children":["$","$L4",null,{"className":"language-java","children":"$a"}],"title":"Event Capture"}],["$","$L3",null,{"language":"typescript","code":"// Enchanted server receives and processes events\nserver.on('player_joined', async (data) => {\n// Dispatch to relevant modules\nawait moduleManager.dispatch('player_joined', data);\n});\n","children":["$","$L4",null,{"className":"language-typescript","children":"$b"}],"title":"Event Processing"}]]}],"\n",["$","$L2",null,{"level":2,"id":"security-model","children":"Security Model"}],"\n",["$","p",null,{"children":"Enchanted implements multiple layers of security:"}],"\n",["$","$L3",null,{"language":"typescript","code":"1. JWT Authentication for API/WebSocket\n2. Permission-based access control\n3. Module isolation\n4. Rate limiting\n5. Input validation\n","children":["$","$L4",null,{"className":"language-typescript","children":"$c"}],"title":"Security Layers"}],"\n",["$","$L2",null,{"level":2,"id":"data-flow","children":"Data Flow"}],"\n",["$","p",null,{"children":"The typical data flow in an Enchanted system:"}],"\n",["$","$L3",null,{"language":"typescript","code":"┌──────────────┐     ┌──────────────┐     ┌──────────────┐\n│   Minecraft  │     │  Enchanted   │     │  Deno KV     │\n│    Event     │────>│   Module     │────>│   Storage    │\n└──────────────┘     └──────────────┘     └──────────────┘\n                           │\n                           ▼\n                    ┌──────────────┐\n                    │   Command    │\n                    │   Response   │\n                    └──────────────┘\n","children":["$","$L4",null,{"className":"language-typescript","children":"$d"}],"title":"Data Flow"}],"\n",["$","$L2",null,{"level":2,"id":"performance-considerations","children":"Performance Considerations"}],"\n",["$","div",null,{"className":"my-6 flex gap-2.5 rounded-sm border border-fuchsia-500/20 bg-fuchsia-50/50 p-4 leading-6 text-fuchsia-900 dark:border-fuchsia-500/30 dark:bg-fuchsia-500/5 dark:text-fuchsia-200 dark:[--tw-prose-links-hover:theme(colors.fuchsia.300)] dark:[--tw-prose-links:theme(colors.white)]","children":[["$","svg",null,{"viewBox":"0 0 16 16","aria-hidden":"true","className":"mt-1 h-4 w-4 flex-none fill-fuchsia-500 stroke-white dark:fill-fuchsia-200/20 dark:stroke-fuchsia-200","children":[["$","circle",null,{"cx":"8","cy":"8","r":"8","strokeWidth":"0"}],["$","path",null,{"fill":"none","strokeLinecap":"round","strokeLinejoin":"round","strokeWidth":"1.5","d":"M6.75 7.75h1.5v3.5"}],["$","circle",null,{"cx":"8","cy":"4","r":".5","fill":"none"}]]}],["$","div",null,{"className":"[&>:first-child]:mt-0 [&>:last-child]:mb-0","children":["$","p",null,{"children":"Enchanted is designed to handle high-throughput scenarios while maintaining low latency for real-time operations."}]}]]}],"\n",["$","p",null,{"children":"Key performance features:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Asynchronous event processing"}],"\n",["$","li",null,{"children":"Connection pooling"}],"\n",["$","li",null,{"children":"Request batching"}],"\n",["$","li",null,{"children":"Efficient state management"}],"\n",["$","li",null,{"children":"Resource limits per container"}],"\n"]}],"\n",["$","$L2",null,{"level":2,"id":"development-workflow","children":"Development Workflow"}],"\n",["$","p",null,{"children":"The typical development workflow in Enchanted:"}],"\n",["$","$L3",null,{"language":"typescript","code":"1. Create/modify module file\n2. Hot-reload automatically triggers\n3. New module version loaded\n4. Old instance gracefully terminated\n5. State preserved in Deno KV\n","children":["$","$L4",null,{"className":"language-typescript","children":"$e"}],"title":"Development Flow"}],"\n",["$","div",null,{"className":"not-prose","children":["$","$Lf",null,{"className":"inline-flex gap-0.5 justify-center overflow-hidden text-sm font-medium transition text-fuchsia-500 hover:text-fuchsia-600 dark:text-fuchsia-400 dark:hover:text-fuchsia-500","href":"/modules","children":[false,"Learn more about Modules",["$","svg",null,{"viewBox":"0 0 20 20","fill":"none","aria-hidden":"true","className":"mt-0.5 h-5 w-5 relative top-px -mr-1","children":["$","path",null,{"stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","d":"m11.5 6.5 3 3.5m0 0-3 3.5m3-3.5h-9"}]}]]}]}]]}],["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl","children":["$","$L10",null,{}]}]]}],null]]},["$","$L11",null,{"parallelRouterKey":"children","segmentPath":["children","architecture","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L12",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,"$L13",null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cfc91e73f16c955c.css","precedence":"next","crossOrigin":""}]],"$L14"]]]]
14:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Architecture - Enchanted Server Documentation"}],["$","meta","3",{"name":"description","content":"Understand how Enchanted works under the hood, from its modular design to real-time communication systems."}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"48x48"}]]
1:null
15:I[4840,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","536","static/chunks/536-654abe48faf78f66.js","841","static/chunks/841-15946dcd10b62610.js","185","static/chunks/app/layout-4890250a0dcdb7a7.js"],"Providers"]
16:I[8733,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","536","static/chunks/536-654abe48faf78f66.js","841","static/chunks/841-15946dcd10b62610.js","185","static/chunks/app/layout-4890250a0dcdb7a7.js"],"Layout"]
13:["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$L15",null,{"children":["$","div",null,{"className":"w-full","children":["$","$L16",null,{"allSections":{"/":[{"title":"What is Enchanted?","id":"what-is-enchanted"},{"title":"Key Features","id":"key-features"},{"title":"Getting Started","id":"getting-started"}],"/architecture":[{"title":"System Overview","id":"system-overview"},{"title":"Real-Time Communication","id":"real-time-communication"},{"title":"Module System","id":"module-system"},{"title":"State Management","id":"state-management"},{"title":"Server Components","id":"server-components"},{"title":"Fabric Plugin Integration","id":"fabric-plugin-integration"},{"title":"Security Model","id":"security-model"},{"title":"Data Flow","id":"data-flow"},{"title":"Performance Considerations","id":"performance-considerations"},{"title":"Development Workflow","id":"development-workflow"}],"/authentication":[{"title":"Basic Auth Module","id":"basic-auth-module"},{"title":"Client Usage","id":"client-usage"},{"title":"Permission Levels","id":"permission-levels"},{"title":"Token Structure","id":"token-structure"},{"title":"Secure Storage","id":"secure-storage"},{"title":"Security Best Practices","id":"security-best-practices"},{"title":"Enhanced Implementation","id":"enhanced-implementation"},{"title":"What's next?","id":"whats-next"}],"/commands":[{"title":"Command Basics","id":"command-basics"},{"title":"Command Arguments","id":"command-arguments"},{"title":"Subcommands","id":"subcommands"},{"title":"Command Responses","id":"command-responses"},{"title":"Command Permissions","id":"command-permissions"},{"title":"Command Error Handling","id":"command-error-handling"},{"title":"Complete Example","id":"complete-example"}],"/development":[{"title":"Development Environment","id":"development-environment"},{"title":"Project Structure","id":"project-structure"},{"title":"Module Development","id":"module-development"},{"title":"Development Server","id":"development-server"},{"title":"Testing Modules","id":"testing-modules"},{"title":"Development Tools","id":"development-tools"},{"title":"Debugging","id":"debugging"},{"title":"Development Configuration","id":"development-configuration"},{"title":"Working with Docker","id":"working-with-docker"},{"title":"Module Hot Reloading","id":"module-hot-reloading"},{"title":"Common Development Tasks","id":"common-development-tasks"},{"title":"Best Practices","id":"best-practices"},{"title":"Module Development Lifecycle","id":"module-development-lifecycle"},{"title":"Example Development Module","id":"example-development-module"}],"/decorators":[{"title":"Module Decorator","id":"module-decorator"},{"title":"Event Decorator","id":"event-decorator"},{"title":"Command Decorator","id":"command-decorator"},{"title":"Description Decorator","id":"description-decorator"},{"title":"Permission Decorator","id":"permission-decorator"},{"title":"Argument Decorator","id":"argument-decorator"},{"title":"Socket Decorator","id":"socket-decorator"},{"title":"Decorator Combinations","id":"decorator-combinations"},{"title":"Complete Example","id":"complete-example"},{"title":"Argument Types","id":"argument-types"},{"title":"Permission Levels","id":"permission-levels"}],"/errors":[{"title":"Core Concepts","id":"core-concepts"},{"title":"Command Error Handling","id":"command-error-handling"},{"title":"Socket Error Handling","id":"socket-error-handling"},{"title":"Event Error Handling","id":"event-error-handling"},{"title":"Storage Error Handling","id":"storage-error-handling"},{"title":"Error Types","id":"error-types"},{"title":"Best Practices","id":"best-practices"},{"title":"Complete Example","id":"complete-example"}],"/events":[{"title":"Event Basics","id":"event-basics"},{"title":"Player Events","id":"player-events"},{"title":"Block Events","id":"block-events"},{"title":"Combat Events","id":"combat-events"},{"title":"Container Events","id":"container-events"},{"title":"Server Events","id":"server-events"},{"title":"Event Handler Patterns","id":"event-handler-patterns"},{"title":"Complete Example","id":"complete-example"}],"/installation":[{"title":"Prerequisites","id":"prerequisites"},{"title":"Environment Setup","id":"environment-setup"},{"title":"Docker Compose Configuration","id":"docker-compose-configuration"},{"title":"Project Configuration","id":"project-configuration"},{"title":"Project Structure","id":"project-structure"},{"title":"Starting the Server","id":"starting-the-server"},{"title":"Verifying Your Installation","id":"verifying-your-installation"},{"title":"Development Commands","id":"development-commands"},{"title":"Troubleshooting Common Issues","id":"troubleshooting-common-issues"}],"/minecraft-api":[{"title":"Basic Commands","id":"basic-commands"},{"title":"Player Management","id":"player-management"},{"title":"World Manipulation","id":"world-manipulation"},{"title":"Scoreboard Management","id":"scoreboard-management"},{"title":"Chat & Messages","id":"chat-and-messages"},{"title":"Player Data","id":"player-data"},{"title":"Complete Example","id":"complete-example"}],"/permissions":[{"title":"Permission Levels","id":"permission-levels"},{"title":"Using Permissions","id":"using-permissions"},{"title":"Permission Context","id":"permission-context"},{"title":"Permission Checks","id":"permission-checks"},{"title":"Command Permissions","id":"command-permissions"},{"title":"Socket Handler Permissions","id":"socket-handler-permissions"},{"title":"Error Handling","id":"error-handling"},{"title":"Best Practices","id":"best-practices"},{"title":"Example Module","id":"example-module"}],"/quickstart":[{"title":"Choose your setup","id":"choose-your-setup"},{"title":"Creating your first module","id":"creating-your-first-module"},{"title":"What's next?","id":"whats-next"}],"/script-context":[{"title":"Context Structure","id":"context-structure"},{"title":"Parameters","id":"parameters"},{"title":"Storage Access","id":"storage-access"},{"title":"Authentication","id":"authentication"},{"title":"Player Communication","id":"player-communication"},{"title":"Player Management","id":"player-management"},{"title":"Logging","id":"logging"},{"title":"Complete Example","id":"complete-example"}],"/storage":[{"title":"Basic Operations","id":"basic-operations"},{"title":"Key Structure","id":"key-structure"},{"title":"Atomic Operations","id":"atomic-operations"},{"title":"Data Models","id":"data-models"},{"title":"Data Management Patterns","id":"data-management-patterns"},{"title":"Complete Example","id":"complete-example"}],"/types":[{"title":"Core Types","id":"core-types"},{"title":"Authentication Types","id":"authentication-types"},{"title":"Decorator Types","id":"decorator-types"},{"title":"API Types","id":"api-types"},{"title":"Event Types","id":"event-types"},{"title":"Storage Types","id":"storage-types"},{"title":"WebSocket Types","id":"web-socket-types"},{"title":"Utility Types","id":"utility-types"},{"title":"Type Usage Example","id":"type-usage-example"}],"/modules":[{"title":"Basic Module Structure","id":"basic-module-structure"},{"title":"Module Context","id":"module-context"},{"title":"Event Handling","id":"event-handling"},{"title":"Command Registration","id":"command-registration"},{"title":"Socket Communication","id":"socket-communication"},{"title":"State Management","id":"state-management"},{"title":"Module Communication","id":"module-communication"},{"title":"Module Lifecycle","id":"module-lifecycle"},{"title":"Complex Module Example","id":"complex-module-example"}],"/websockets":[{"title":"Socket Basics","id":"socket-basics"},{"title":"Message Structure","id":"message-structure"},{"title":"Authentication","id":"authentication"},{"title":"Real-time Updates","id":"real-time-updates"},{"title":"Client Implementation","id":"client-implementation"},{"title":"Socket State Management","id":"socket-state-management"},{"title":"Complete Example","id":"complete-example"}],"/examples/basic-module":[{"title":"Complete Module","id":"complete-module"},{"title":"Module Breakdown","id":"module-breakdown"},{"title":"Usage Examples","id":"usage-examples"},{"title":"Key Concepts Demonstrated","id":"key-concepts-demonstrated"}],"/examples/chat":[{"title":"Complete Module","id":"complete-module"},{"title":"WebSocket Integration","id":"web-socket-integration"},{"title":"Usage Examples","id":"usage-examples"},{"title":"Key Features","id":"key-features"}],"/utilities":[{"title":"Rate Limiting","id":"rate-limiting"},{"title":"Message Formatting","id":"message-formatting"},{"title":"Time Utilities","id":"time-utilities"},{"title":"Data Validation","id":"data-validation"},{"title":"Promise Utilities","id":"promise-utilities"},{"title":"Collection Utilities","id":"collection-utilities"},{"title":"Complete Example","id":"complete-example"}],"/examples/economy":[{"title":"Complete Module","id":"complete-module"},{"title":"Key Features","id":"key-features"},{"title":"Usage Examples","id":"usage-examples"},{"title":"Key Concepts","id":"key-concepts"},{"title":"Common Patterns","id":"common-patterns"},{"title":"Extension Ideas","id":"extension-ideas"}],"/examples/player-stats":[{"title":"Complete Module","id":"complete-module"},{"title":"Stats Tracking","id":"stats-tracking"},{"title":"Usage","id":"usage"},{"title":"Event Handling","id":"event-handling"},{"title":"Web Integration","id":"web-integration"},{"title":"Key Features","id":"key-features"}]},"children":["$","$L11",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L12",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"absolute inset-0 -z-10 mx-0 max-w-none overflow-hidden","children":["$","div",null,{"className":"absolute left-1/2 top-0 ml-[-38rem] h-[25rem] w-[81.25rem] dark:[mask-image:linear-gradient(white,transparent)]","children":[["$","div",null,{"className":"absolute inset-0 bg-gradient-to-r from-[#fff] to-[#fff] opacity-40 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-[#000]/30 dark:to-[#000]/30 dark:opacity-100","children":["$","svg",null,{"aria-hidden":"true","className":"absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5","children":[["$","defs",null,{"children":["$","pattern",null,{"id":":S1:","width":72,"height":56,"patternUnits":"userSpaceOnUse","x":-12,"y":4,"children":["$","path",null,{"d":"M.5 56V.5H72","fill":"none"}]}]}],["$","rect",null,{"width":"100%","height":"100%","strokeWidth":0,"fill":"url(#:S1:)"}],["$","svg",null,{"x":-12,"y":4,"className":"overflow-visible","children":[["$","rect","4-3",{"strokeWidth":"0","width":73,"height":57,"x":288,"y":168}],["$","rect","2-1",{"strokeWidth":"0","width":73,"height":57,"x":144,"y":56}],["$","rect","7-3",{"strokeWidth":"0","width":73,"height":57,"x":504,"y":168}],["$","rect","10-6",{"strokeWidth":"0","width":73,"height":57,"x":720,"y":336}]]}]]}]}],["$","svg",null,{"viewBox":"0 0 1113 440","aria-hidden":"true","className":"absolute left-1/2 top-0 ml-[-19rem] w-[69.5625rem] fill-white blur-[26px] dark:hidden","children":["$","path",null,{"d":"M.016 439.5s-9.5-300 434-300S882.516 20 882.516 20V0h230.004v439.5H.016Z"}]}]]}]}],["$","div",null,{"className":"mx-auto flex h-full max-w-xl flex-col items-center justify-center py-16 text-center","children":[["$","p",null,{"className":" text-5xl font-semibold text-zinc-900 dark:text-white","children":"404"}],["$","h1",null,{"className":"mt-2 text-2xl font-bold text-zinc-900 dark:text-white","children":"Page not found"}],["$","p",null,{"className":"mt-2 text-base text-zinc-600 dark:text-zinc-400","children":"Sorry, we couldn’t find the page you’re looking for."}],["$","$Lf",null,{"className":"inline-flex gap-0.5 justify-center overflow-hidden text-sm font-medium transition rounded-sm bg-zinc-900 py-1 px-3 text-white hover:bg-zinc-700 dark:bg-fuchsia-400/10 dark:text-fuchsia-400 dark:ring-1 dark:ring-inset dark:ring-fuchsia-400/20 dark:hover:bg-fuchsia-400/10 dark:hover:text-fuchsia-300 dark:hover:ring-fuchsia-300 mt-8","href":"/","children":[false,"Back to docs",["$","svg",null,{"viewBox":"0 0 20 20","fill":"none","aria-hidden":"true","className":"mt-0.5 h-5 w-5 -mr-1","children":["$","path",null,{"stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","d":"m11.5 6.5 3 3.5m0 0-3 3.5m3-3.5h-9"}]}]]}]]}]],"notFoundStyles":[],"styles":null}]}]}]}]}]}]
