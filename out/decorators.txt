2:I[5824,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-15946dcd10b62610.js","211","static/chunks/app/decorators/page-ca6aa31661e89265.js"],"Heading"]
3:I[3801,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-15946dcd10b62610.js","211","static/chunks/app/decorators/page-ca6aa31661e89265.js"],"Code"]
4:I[3801,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-15946dcd10b62610.js","211","static/chunks/app/decorators/page-ca6aa31661e89265.js"],"Pre"]
6:I[3801,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-15946dcd10b62610.js","211","static/chunks/app/decorators/page-ca6aa31661e89265.js"],"CodeGroup"]
13:I[5250,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-15946dcd10b62610.js","211","static/chunks/app/decorators/page-ca6aa31661e89265.js"],""]
14:I[4052,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","841","static/chunks/841-15946dcd10b62610.js","211","static/chunks/app/decorators/page-ca6aa31661e89265.js"],"Feedback"]
15:I[5613,[],""]
16:I[1778,[],""]
5:T6da,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Module</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ExampleModule&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Module name</span></span>
<span><span style="color: var(--shiki-color-text)">  version</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1.0.0&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// Semantic version</span></span>
<span><span style="color: var(--shiki-color-text)">})</span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ExampleModule</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Module implementation</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>7:T41a,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Event</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player_death&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Event</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player_respawned&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">handlePlayerState</span><span style="color: var(--shiki-color-text)">(context: ScriptContext) {</span></span>
<span><span style="color: var(--shiki-token-comment)">// Handle both death and respawn</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>8:T7e6,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;shop&#39;</span><span style="color: var(--shiki-color-text)">])              </span><span style="color: var(--shiki-token-comment)">// Base command</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;shop&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;buy&#39;</span><span style="color: var(--shiki-color-text)">])       </span><span style="color: var(--shiki-token-comment)">// Subcommand</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;shop&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;sell&#39;</span><span style="color: var(--shiki-color-text)">])      </span><span style="color: var(--shiki-token-comment)">// Another subcommand</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">handleCommand</span><span style="color: var(--shiki-color-text)">(context: ScriptContext) {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Command implementation</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>9:T452,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;balance&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Description</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Check your coin balance&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">balanceCommand</span><span style="color: var(--shiki-color-text)">(context: ScriptContext) {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Command implementation</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>a:Tdc8,<span><span style="color: var(--shiki-token-comment)">// Regular player command</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;balance&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Permission</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">playerCommand</span><span style="color: var(--shiki-color-text)">(context: ScriptContext) {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Available to all players</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Admin command</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;give&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Permission</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;operator&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">adminCommand</span><span style="color: var(--shiki-color-text)">(context: ScriptContext) {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Only available to operators</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Public command</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;help&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Permission</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;guest&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">publicCommand</span><span style="color: var(--shiki-color-text)">(context: ScriptContext) {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Available to everyone</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>b:T14ee,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;give&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Argument</span><span style="color: var(--shiki-color-text)">([</span></span>
<span><span style="color: var(--shiki-color-text)">{</span></span>
<span><span style="color: var(--shiki-color-text)">    name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;player&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;string&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Target player&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">{</span></span>
<span><span style="color: var(--shiki-color-text)">    name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;item&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;string&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Item to give&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">{</span></span>
<span><span style="color: var(--shiki-color-text)">    name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;amount&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;integer&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Amount&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    optional</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    default</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">giveCommand</span><span style="color: var(--shiki-color-text)">(context: ScriptContext) {</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { </span><span style="color: var(--shiki-token-constant)">args</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">context</span><span style="color: var(--shiki-color-text)">.params;</span></span>
<span><span style="color: var(--shiki-token-comment)">// Access args.player, args.item, args.amount</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>c:Tf39,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;rank&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Argument</span><span style="color: var(--shiki-color-text)">([</span></span>
<span><span style="color: var(--shiki-color-text)">{</span></span>
<span><span style="color: var(--shiki-color-text)">    name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;player&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;string&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Player name&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">{</span></span>
<span><span style="color: var(--shiki-color-text)">    name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;rank&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;enum&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    values</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&#39;vip&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;mvp&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;admin&#39;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Rank to assign&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">rankCommand</span><span style="color: var(--shiki-color-text)">(context: ScriptContext) {</span></span>
<span><span style="color: var(--shiki-token-comment)">// Command implementation</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>d:T12ff,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Socket</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;get_player_data&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">handleSocket</span><span style="color: var(--shiki-color-text)">(context: ScriptContext) {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">try</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Verify authentication</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">!await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">context</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">auth</span><span style="color: var(--shiki-token-function)">.checkPermission</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player&#39;</span><span style="color: var(--shiki-color-text)">)) {</span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">        success</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        error</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Unauthorized&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">      };</span></span>
<span><span style="color: var(--shiki-color-text)">    }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Return data</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">      success</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      data</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// Response data</span></span>
<span><span style="color: var(--shiki-color-text)">      }</span></span>
<span><span style="color: var(--shiki-color-text)">    };</span></span>
<span><span style="color: var(--shiki-color-text)">  } </span><span style="color: var(--shiki-token-keyword)">catch</span><span style="color: var(--shiki-color-text)"> (error) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">      success</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      error</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">error</span><span style="color: var(--shiki-color-text)">.message</span></span>
<span><span style="color: var(--shiki-color-text)">    };</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>e:T21f3,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Module</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ComplexModule&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  version</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1.0.0&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">})</span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ComplexModule</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Command with arguments and permission</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;shop&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;buy&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Description</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Purchase items from the shop&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Permission</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Argument</span><span style="color: var(--shiki-color-text)">([</span></span>
<span><span style="color: var(--shiki-color-text)">    { name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;item&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;string&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Item to buy&#39;</span><span style="color: var(--shiki-color-text)"> }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    { name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;amount&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;integer&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Amount&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> optional</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)"> }</span></span>
<span><span style="color: var(--shiki-color-text)">  ])</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">buyCommand</span><span style="color: var(--shiki-color-text)">(context</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ScriptContext</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Implementation</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Multiple event handler</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Event</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player_death&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Event</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player_respawned&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">handlePlayerState</span><span style="color: var(--shiki-color-text)">(context</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ScriptContext</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Implementation</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Socket with specific message type</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Socket</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player_stats&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">handleStats</span><span style="color: var(--shiki-color-text)">(context</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ScriptContext</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Implementation</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>f:T800,interface ShopItem {
  id: string;
  name: string;
  price: number;
  description: string;
}

@Module({
  name: 'ShopModule',
  version: '1.0.0'
})
export class ShopModule {
  // View shop items
  @Command(['shop'])
  @Description('View available shop items')
  @Permission('player')
  async viewShop({ params, api }: ScriptContext) {
    const { sender } = params;
    await api.tellraw(sender, JSON.stringify({
      text: "=== Shop Items ===",
      color: "gold"
    }));
  }

  // Buy items
  @Command(['shop', 'buy'])
  @Description('Purchase items from the shop')
  @Permission('player')
  @Argument([
    {
      name: 'item',
      type: 'string',
      description: 'Item to purchase'
    },
    {
      name: 'amount',
      type: 'integer',
      description: 'Amount to buy',
      optional: true,
      default: 1
    }
  ])
  async buyItem({ params, api, kv }: ScriptContext) {
    // Implementation
  }

  // Admin commands
  @Command(['shop', 'add'])
  @Description('Add an item to the shop')
  @Permission('operator')
  @Argument([
    { name: 'item', type: 'string', description: 'Item ID' },
    { name: 'price', type: 'integer', description: 'Item price' },
    { name: 'name', type: 'string', description: 'Display name' }
  ])
  async addItem({ params, kv }: ScriptContext) {
    // Implementation
  }

  // Event handlers
  @Event('player_joined')
  async sendWelcome({ params, api }: ScriptContext) {
    await api.tellraw(params.playerName, JSON.stringify({
      text: "Welcome to the shop!",
      color: "gold"
    }));
  }

  // Socket handlers
  @Socket('shop_data')
  async getShopData({ kv, auth }: ScriptContext) {
    try {
      if (!await auth.checkPermission('player')) {
        return {
          success: false,
          error: 'Unauthorized'
        };
      }

      const items = await kv.get(['shop', 'items']);
      return {
        success: true,
        data: items.value || []
      };
    } catch (error) {
      return {
        success: false,
        error: error.message
      };
    }
  }
}
10:T656f,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ShopItem</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  id</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  price</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Module</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ShopModule&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  version</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1.0.0&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">})</span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ShopModule</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// View shop items</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;shop&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Description</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;View available shop items&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Permission</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">viewShop</span><span style="color: var(--shiki-color-text)">({ params</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> api }</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ScriptContext</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { </span><span style="color: var(--shiki-token-constant)">sender</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> params;</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.tellraw</span><span style="color: var(--shiki-color-text)">(sender</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">JSON</span><span style="color: var(--shiki-token-function)">.stringify</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">      text</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;=== Shop Items ===&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      color</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;gold&quot;</span></span>
<span><span style="color: var(--shiki-color-text)">    }));</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Buy items</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;shop&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;buy&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Description</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Purchase items from the shop&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Permission</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Argument</span><span style="color: var(--shiki-color-text)">([</span></span>
<span><span style="color: var(--shiki-color-text)">    {</span></span>
<span><span style="color: var(--shiki-color-text)">      name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;item&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;string&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Item to purchase&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">    }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    {</span></span>
<span><span style="color: var(--shiki-color-text)">      name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;amount&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;integer&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Amount to buy&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      optional</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      default</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span></span>
<span><span style="color: var(--shiki-color-text)">    }</span></span>
<span><span style="color: var(--shiki-color-text)">  ])</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">buyItem</span><span style="color: var(--shiki-color-text)">({ params</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> api</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> kv }</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ScriptContext</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Implementation</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Admin commands</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Command</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;shop&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;add&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Description</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Add an item to the shop&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Permission</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;operator&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Argument</span><span style="color: var(--shiki-color-text)">([</span></span>
<span><span style="color: var(--shiki-color-text)">    { name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;item&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;string&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Item ID&#39;</span><span style="color: var(--shiki-color-text)"> }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    { name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;price&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;integer&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Item price&#39;</span><span style="color: var(--shiki-color-text)"> }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    { name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;name&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;string&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Display name&#39;</span><span style="color: var(--shiki-color-text)"> }</span></span>
<span><span style="color: var(--shiki-color-text)">  ])</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">addItem</span><span style="color: var(--shiki-color-text)">({ params</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> kv }</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ScriptContext</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Implementation</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Event handlers</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Event</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player_joined&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">sendWelcome</span><span style="color: var(--shiki-color-text)">({ params</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> api }</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ScriptContext</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.tellraw</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">params</span><span style="color: var(--shiki-color-text)">.playerName</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">JSON</span><span style="color: var(--shiki-token-function)">.stringify</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">      text</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Welcome to the shop!&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      color</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;gold&quot;</span></span>
<span><span style="color: var(--shiki-color-text)">    }));</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Socket handlers</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Socket</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;shop_data&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">getShopData</span><span style="color: var(--shiki-color-text)">({ kv</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> auth }</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ScriptContext</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">try</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">!await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">auth</span><span style="color: var(--shiki-token-function)">.checkPermission</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;player&#39;</span><span style="color: var(--shiki-color-text)">)) {</span></span>
<span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">          success</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">          error</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Unauthorized&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">        };</span></span>
<span><span style="color: var(--shiki-color-text)">      }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">items</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">kv</span><span style="color: var(--shiki-token-function)">.get</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;shop&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;items&#39;</span><span style="color: var(--shiki-color-text)">]);</span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">        success</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        data</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">items</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> []</span></span>
<span><span style="color: var(--shiki-color-text)">      };</span></span>
<span><span style="color: var(--shiki-color-text)">    } </span><span style="color: var(--shiki-token-keyword)">catch</span><span style="color: var(--shiki-color-text)"> (error) {</span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">        success</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        error</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">error</span><span style="color: var(--shiki-color-text)">.message</span></span>
<span><span style="color: var(--shiki-color-text)">      };</span></span>
<span><span style="color: var(--shiki-color-text)">    }</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>11:T8c1,<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArgumentType</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;string&#39;</span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Text input</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;integer&#39;</span><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-comment)">// Whole numbers</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;number&#39;</span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Decimal numbers</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;boolean&#39;</span><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-comment)">// True/false</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;enum&#39;</span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-comment)">// Predefined values</span></span>
<span></span>12:T5da,<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">PermissionLevel</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;guest&#39;</span><span style="color: var(--shiki-color-text)">     </span><span style="color: var(--shiki-token-comment)">// No authentication required</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;player&#39;</span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Authenticated players</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;operator&#39;</span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Server operators</span></span>
<span></span>0:["m6CdOmFbkUcxvfzSbSfo9",[[["",{"children":["decorators",{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",{"children":["decorators",{"children":["__PAGE__",{},["$L1",["$","article",null,{"className":"flex h-full flex-col pb-10 pt-16","children":[["$","div",null,{"className":"flex-auto prose dark:prose-invert [html_:where(&>*)]:mx-auto [html_:where(&>*)]:max-w-2xl [html_:where(&>*)]:lg:mx-[calc(50%-min(50%,theme(maxWidth.lg)))] [html_:where(&>*)]:lg:max-w-3xl","children":[["$","h1",null,{"children":"Decorators"}],"\n",["$","p",null,{"children":"Decorators are the building blocks of Enchanted modules, used to define module properties, handle events, create commands, and manage WebSocket communications.","className":"lead"}],"\n",["$","$L2",null,{"level":2,"id":"module-decorator","children":"Module Decorator"}],"\n",["$","p",null,{"children":["The ",["$","$L3",null,{"children":"@Module"}]," decorator defines a module's metadata:"]}],"\n",["$","$L4",null,{"language":"typescript","code":"@Module({\n  name: 'ExampleModule',    // Module name\n  version: '1.0.0',        // Semantic version\n})\nexport class ExampleModule {\n  // Module implementation\n}\n","children":["$","$L3",null,{"className":"language-typescript","children":"$5"}],"title":"@Module"}],"\n",["$","div",null,{"className":"my-6 flex gap-2.5 rounded-sm border border-fuchsia-500/20 bg-fuchsia-50/50 p-4 leading-6 text-fuchsia-900 dark:border-fuchsia-500/30 dark:bg-fuchsia-500/5 dark:text-fuchsia-200 dark:[--tw-prose-links-hover:theme(colors.fuchsia.300)] dark:[--tw-prose-links:theme(colors.white)]","children":[["$","svg",null,{"viewBox":"0 0 16 16","aria-hidden":"true","className":"mt-1 h-4 w-4 flex-none fill-fuchsia-500 stroke-white dark:fill-fuchsia-200/20 dark:stroke-fuchsia-200","children":[["$","circle",null,{"cx":"8","cy":"8","r":"8","strokeWidth":"0"}],["$","path",null,{"fill":"none","strokeLinecap":"round","strokeLinejoin":"round","strokeWidth":"1.5","d":"M6.75 7.75h1.5v3.5"}],["$","circle",null,{"cx":"8","cy":"4","r":".5","fill":"none"}]]}],["$","div",null,{"className":"[&>:first-child]:mt-0 [&>:last-child]:mb-0","children":["$","p",null,{"children":"The module name must be unique across your server, and the version should follow semantic versioning (MAJOR.MINOR.PATCH)."}]}]]}],"\n",["$","$L2",null,{"level":2,"id":"event-decorator","children":"Event Decorator"}],"\n",["$","p",null,{"children":["The ",["$","$L3",null,{"children":"@Event"}]," decorator registers event handlers:"]}],"\n",["$","$L6",null,{"children":[["$","$L4",null,{"language":"typescript","code":"@Event('player_joined')\nasync handleJoin(context: ScriptContext) {\n// Handle player join\n}\n","children":["$","$L3",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-color-text)\">@</span><span style=\"color: var(--shiki-token-function)\">Event</span><span style=\"color: var(--shiki-color-text)\">(</span><span style=\"color: var(--shiki-token-string-expression)\">&#39;player_joined&#39;</span><span style=\"color: var(--shiki-color-text)\">)</span></span>\n<span><span style=\"color: var(--shiki-color-text)\">async </span><span style=\"color: var(--shiki-token-function)\">handleJoin</span><span style=\"color: var(--shiki-color-text)\">(context: ScriptContext) {</span></span>\n<span><span style=\"color: var(--shiki-token-comment)\">// Handle player join</span></span>\n<span><span style=\"color: var(--shiki-color-text)\">}</span></span>\n<span></span>"}],"title":"Basic Event"}],["$","$L4",null,{"language":"typescript","code":"@Event('player_death')\n@Event('player_respawned')\nasync handlePlayerState(context: ScriptContext) {\n// Handle both death and respawn\n}\n","children":["$","$L3",null,{"className":"language-typescript","children":"$7"}],"title":"Multiple Events"}],["$","$L4",null,{"language":"typescript","code":"@Event('server_started')\nasync onServerStart(context: ScriptContext) {\n// Server startup handling\n}\n","children":["$","$L3",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-color-text)\">@</span><span style=\"color: var(--shiki-token-function)\">Event</span><span style=\"color: var(--shiki-color-text)\">(</span><span style=\"color: var(--shiki-token-string-expression)\">&#39;server_started&#39;</span><span style=\"color: var(--shiki-color-text)\">)</span></span>\n<span><span style=\"color: var(--shiki-color-text)\">async </span><span style=\"color: var(--shiki-token-function)\">onServerStart</span><span style=\"color: var(--shiki-color-text)\">(context: ScriptContext) {</span></span>\n<span><span style=\"color: var(--shiki-token-comment)\">// Server startup handling</span></span>\n<span><span style=\"color: var(--shiki-color-text)\">}</span></span>\n<span></span>"}],"title":"Server Events"}]]}],"\n",["$","$L2",null,{"level":2,"id":"command-decorator","children":"Command Decorator"}],"\n",["$","p",null,{"children":["The ",["$","$L3",null,{"children":"@Command"}]," decorator creates Minecraft commands:"]}],"\n",["$","$L4",null,{"language":"typescript","code":"@Command(['shop'])              // Base command\n@Command(['shop', 'buy'])       // Subcommand\n@Command(['shop', 'sell'])      // Another subcommand\nasync handleCommand(context: ScriptContext) {\n  // Command implementation\n}\n","children":["$","$L3",null,{"className":"language-typescript","children":"$8"}],"title":"@Command"}],"\n",["$","$L2",null,{"level":2,"id":"description-decorator","children":"Description Decorator"}],"\n",["$","p",null,{"children":["The ",["$","$L3",null,{"children":"@Description"}]," decorator adds help text to commands:"]}],"\n",["$","$L4",null,{"language":"typescript","code":"@Command(['balance'])\n@Description('Check your coin balance')\nasync balanceCommand(context: ScriptContext) {\n  // Command implementation\n}\n","children":["$","$L3",null,{"className":"language-typescript","children":"$9"}],"title":"@Description"}],"\n",["$","$L2",null,{"level":2,"id":"permission-decorator","children":"Permission Decorator"}],"\n",["$","p",null,{"children":["The ",["$","$L3",null,{"children":"@Permission"}]," decorator controls access to commands:"]}],"\n",["$","$L4",null,{"language":"typescript","code":"// Regular player command\n@Command(['balance'])\n@Permission('player')\nasync playerCommand(context: ScriptContext) {\n  // Available to all players\n}\n\n// Admin command\n@Command(['give'])\n@Permission('operator')\nasync adminCommand(context: ScriptContext) {\n  // Only available to operators\n}\n\n// Public command\n@Command(['help'])\n@Permission('guest')\nasync publicCommand(context: ScriptContext) {\n  // Available to everyone\n}\n","children":["$","$L3",null,{"className":"language-typescript","children":"$a"}],"title":"@Permission"}],"\n",["$","$L2",null,{"level":2,"id":"argument-decorator","children":"Argument Decorator"}],"\n",["$","p",null,{"children":["The ",["$","$L3",null,{"children":"@Argument"}]," decorator defines command arguments:"]}],"\n",["$","$L6",null,{"children":[["$","$L4",null,{"language":"typescript","code":"@Command(['give'])\n@Argument([\n{\n    name: 'player',\n    type: 'string',\n    description: 'Target player'\n},\n{\n    name: 'item',\n    type: 'string',\n    description: 'Item to give'\n},\n{\n    name: 'amount',\n    type: 'integer',\n    description: 'Amount',\n    optional: true,\n    default: 1\n}\n])\nasync giveCommand(context: ScriptContext) {\nconst { args } = context.params;\n// Access args.player, args.item, args.amount\n}\n","children":["$","$L3",null,{"className":"language-typescript","children":"$b"}],"title":"Basic Arguments"}],["$","$L4",null,{"language":"typescript","code":"@Command(['rank'])\n@Argument([\n{\n    name: 'player',\n    type: 'string',\n    description: 'Player name'\n},\n{\n    name: 'rank',\n    type: 'enum',\n    values: ['vip', 'mvp', 'admin'],\n    description: 'Rank to assign'\n}\n])\nasync rankCommand(context: ScriptContext) {\n// Command implementation\n}\n","children":["$","$L3",null,{"className":"language-typescript","children":"$c"}],"title":"Enum Arguments"}]]}],"\n",["$","$L2",null,{"level":2,"id":"socket-decorator","children":"Socket Decorator"}],"\n",["$","p",null,{"children":["The ",["$","$L3",null,{"children":"@Socket"}]," decorator handles WebSocket messages:"]}],"\n",["$","$L4",null,{"language":"typescript","code":"@Socket('get_player_data')\nasync handleSocket(context: ScriptContext) {\n  try {\n    // Verify authentication\n    if (!await context.auth.checkPermission('player')) {\n      return {\n        success: false,\n        error: 'Unauthorized'\n      };\n    }\n\n    // Return data\n    return {\n      success: true,\n      data: {\n        // Response data\n      }\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n}\n","children":["$","$L3",null,{"className":"language-typescript","children":"$d"}],"title":"@Socket"}],"\n",["$","$L2",null,{"level":2,"id":"decorator-combinations","children":"Decorator Combinations"}],"\n",["$","p",null,{"children":"Common decorator combinations:"}],"\n",["$","$L4",null,{"language":"typescript","code":"@Module({\n  name: 'ComplexModule',\n  version: '1.0.0'\n})\nexport class ComplexModule {\n  // Command with arguments and permission\n  @Command(['shop', 'buy'])\n  @Description('Purchase items from the shop')\n  @Permission('player')\n  @Argument([\n    { name: 'item', type: 'string', description: 'Item to buy' },\n    { name: 'amount', type: 'integer', description: 'Amount', optional: true }\n  ])\n  async buyCommand(context: ScriptContext) {\n    // Implementation\n  }\n\n  // Multiple event handler\n  @Event('player_death')\n  @Event('player_respawned')\n  async handlePlayerState(context: ScriptContext) {\n    // Implementation\n  }\n\n  // Socket with specific message type\n  @Socket('player_stats')\n  async handleStats(context: ScriptContext) {\n    // Implementation\n  }\n}\n","children":["$","$L3",null,{"className":"language-typescript","children":"$e"}],"title":"Decorator Patterns"}],"\n",["$","$L2",null,{"level":2,"id":"complete-example","children":"Complete Example"}],"\n",["$","p",null,{"children":"Here's a comprehensive example showing various decorator usages:"}],"\n",["$","$L4",null,{"language":"typescript","code":"$f","children":["$","$L3",null,{"className":"language-typescript","children":"$10"}],"title":"ShopModule.ts"}],"\n",["$","$L2",null,{"level":2,"id":"argument-types","children":"Argument Types"}],"\n",["$","p",null,{"children":["Available argument types for the ",["$","$L3",null,{"children":"@Argument"}]," decorator:"]}],"\n",["$","$L4",null,{"language":"typescript","code":"type ArgumentType =\n  | 'string'    // Text input\n  | 'integer'   // Whole numbers\n  | 'number'    // Decimal numbers\n  | 'boolean'   // True/false\n  | 'enum'      // Predefined values\n","children":["$","$L3",null,{"className":"language-typescript","children":"$11"}],"title":"Argument Types"}],"\n",["$","$L2",null,{"level":2,"id":"permission-levels","children":"Permission Levels"}],"\n",["$","p",null,{"children":["Available permission levels for the ",["$","$L3",null,{"children":"@Permission"}]," decorator:"]}],"\n",["$","$L4",null,{"language":"typescript","code":"type PermissionLevel =\n  | 'guest'     // No authentication required\n  | 'player'    // Authenticated players\n  | 'operator'  // Server operators\n","children":["$","$L3",null,{"className":"language-typescript","children":"$12"}],"title":"Permission Levels"}],"\n",["$","div",null,{"className":"not-prose","children":["$","$L13",null,{"className":"inline-flex gap-0.5 justify-center overflow-hidden text-sm font-medium transition text-fuchsia-500 hover:text-fuchsia-600 dark:text-fuchsia-400 dark:hover:text-fuchsia-500","href":"/modules","children":[false,"Learn about Modules",["$","svg",null,{"viewBox":"0 0 20 20","fill":"none","aria-hidden":"true","className":"mt-0.5 h-5 w-5 relative top-px -mr-1","children":["$","path",null,{"stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","d":"m11.5 6.5 3 3.5m0 0-3 3.5m3-3.5h-9"}]}]]}]}]]}],["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl","children":["$","$L14",null,{}]}]]}],null]]},["$","$L15",null,{"parallelRouterKey":"children","segmentPath":["children","decorators","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L16",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,"$L17",null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cfc91e73f16c955c.css","precedence":"next","crossOrigin":""}]],"$L18"]]]]
18:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Decorators - Enchanted Server Documentation"}],["$","meta","3",{"name":"description","content":"Learn about the TypeScript decorators used to build Enchanted modules."}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"48x48"}]]
1:null
19:I[4840,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","536","static/chunks/536-654abe48faf78f66.js","841","static/chunks/841-15946dcd10b62610.js","185","static/chunks/app/layout-4890250a0dcdb7a7.js"],"Providers"]
1a:I[8733,["250","static/chunks/250-86e445a1e316c17d.js","371","static/chunks/371-9fd983c6f9223e2a.js","536","static/chunks/536-654abe48faf78f66.js","841","static/chunks/841-15946dcd10b62610.js","185","static/chunks/app/layout-4890250a0dcdb7a7.js"],"Layout"]
17:["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$L19",null,{"children":["$","div",null,{"className":"w-full","children":["$","$L1a",null,{"allSections":{"/":[{"title":"What is Enchanted?","id":"what-is-enchanted"},{"title":"Key Features","id":"key-features"},{"title":"Getting Started","id":"getting-started"}],"/architecture":[{"title":"System Overview","id":"system-overview"},{"title":"Real-Time Communication","id":"real-time-communication"},{"title":"Module System","id":"module-system"},{"title":"State Management","id":"state-management"},{"title":"Server Components","id":"server-components"},{"title":"Fabric Plugin Integration","id":"fabric-plugin-integration"},{"title":"Security Model","id":"security-model"},{"title":"Data Flow","id":"data-flow"},{"title":"Performance Considerations","id":"performance-considerations"},{"title":"Development Workflow","id":"development-workflow"}],"/decorators":[{"title":"Module Decorator","id":"module-decorator"},{"title":"Event Decorator","id":"event-decorator"},{"title":"Command Decorator","id":"command-decorator"},{"title":"Description Decorator","id":"description-decorator"},{"title":"Permission Decorator","id":"permission-decorator"},{"title":"Argument Decorator","id":"argument-decorator"},{"title":"Socket Decorator","id":"socket-decorator"},{"title":"Decorator Combinations","id":"decorator-combinations"},{"title":"Complete Example","id":"complete-example"},{"title":"Argument Types","id":"argument-types"},{"title":"Permission Levels","id":"permission-levels"}],"/authentication":[{"title":"Basic Auth Module","id":"basic-auth-module"},{"title":"Client Usage","id":"client-usage"},{"title":"Permission Levels","id":"permission-levels"},{"title":"Token Structure","id":"token-structure"},{"title":"Secure Storage","id":"secure-storage"},{"title":"Security Best Practices","id":"security-best-practices"},{"title":"Enhanced Implementation","id":"enhanced-implementation"},{"title":"What's next?","id":"whats-next"}],"/commands":[{"title":"Command Basics","id":"command-basics"},{"title":"Command Arguments","id":"command-arguments"},{"title":"Subcommands","id":"subcommands"},{"title":"Command Responses","id":"command-responses"},{"title":"Command Permissions","id":"command-permissions"},{"title":"Command Error Handling","id":"command-error-handling"},{"title":"Complete Example","id":"complete-example"}],"/development":[{"title":"Development Environment","id":"development-environment"},{"title":"Project Structure","id":"project-structure"},{"title":"Module Development","id":"module-development"},{"title":"Development Server","id":"development-server"},{"title":"Testing Modules","id":"testing-modules"},{"title":"Development Tools","id":"development-tools"},{"title":"Debugging","id":"debugging"},{"title":"Development Configuration","id":"development-configuration"},{"title":"Working with Docker","id":"working-with-docker"},{"title":"Module Hot Reloading","id":"module-hot-reloading"},{"title":"Common Development Tasks","id":"common-development-tasks"},{"title":"Best Practices","id":"best-practices"},{"title":"Module Development Lifecycle","id":"module-development-lifecycle"},{"title":"Example Development Module","id":"example-development-module"}],"/events":[{"title":"Event Basics","id":"event-basics"},{"title":"Player Events","id":"player-events"},{"title":"Block Events","id":"block-events"},{"title":"Combat Events","id":"combat-events"},{"title":"Container Events","id":"container-events"},{"title":"Server Events","id":"server-events"},{"title":"Event Handler Patterns","id":"event-handler-patterns"},{"title":"Complete Example","id":"complete-example"}],"/installation":[{"title":"Prerequisites","id":"prerequisites"},{"title":"Environment Setup","id":"environment-setup"},{"title":"Docker Compose Configuration","id":"docker-compose-configuration"},{"title":"Project Configuration","id":"project-configuration"},{"title":"Project Structure","id":"project-structure"},{"title":"Starting the Server","id":"starting-the-server"},{"title":"Verifying Your Installation","id":"verifying-your-installation"},{"title":"Development Commands","id":"development-commands"},{"title":"Troubleshooting Common Issues","id":"troubleshooting-common-issues"}],"/errors":[{"title":"Core Concepts","id":"core-concepts"},{"title":"Command Error Handling","id":"command-error-handling"},{"title":"Socket Error Handling","id":"socket-error-handling"},{"title":"Event Error Handling","id":"event-error-handling"},{"title":"Storage Error Handling","id":"storage-error-handling"},{"title":"Error Types","id":"error-types"},{"title":"Best Practices","id":"best-practices"},{"title":"Complete Example","id":"complete-example"}],"/minecraft-api":[{"title":"Basic Commands","id":"basic-commands"},{"title":"Player Management","id":"player-management"},{"title":"World Manipulation","id":"world-manipulation"},{"title":"Scoreboard Management","id":"scoreboard-management"},{"title":"Chat & Messages","id":"chat-and-messages"},{"title":"Player Data","id":"player-data"},{"title":"Complete Example","id":"complete-example"}],"/modules":[{"title":"Basic Module Structure","id":"basic-module-structure"},{"title":"Module Context","id":"module-context"},{"title":"Event Handling","id":"event-handling"},{"title":"Command Registration","id":"command-registration"},{"title":"Socket Communication","id":"socket-communication"},{"title":"State Management","id":"state-management"},{"title":"Module Communication","id":"module-communication"},{"title":"Module Lifecycle","id":"module-lifecycle"},{"title":"Complex Module Example","id":"complex-module-example"}],"/permissions":[{"title":"Permission Levels","id":"permission-levels"},{"title":"Using Permissions","id":"using-permissions"},{"title":"Permission Context","id":"permission-context"},{"title":"Permission Checks","id":"permission-checks"},{"title":"Command Permissions","id":"command-permissions"},{"title":"Socket Handler Permissions","id":"socket-handler-permissions"},{"title":"Error Handling","id":"error-handling"},{"title":"Best Practices","id":"best-practices"},{"title":"Example Module","id":"example-module"}],"/quickstart":[{"title":"Choose your setup","id":"choose-your-setup"},{"title":"Creating your first module","id":"creating-your-first-module"},{"title":"What's next?","id":"whats-next"}],"/script-context":[{"title":"Context Structure","id":"context-structure"},{"title":"Parameters","id":"parameters"},{"title":"Storage Access","id":"storage-access"},{"title":"Authentication","id":"authentication"},{"title":"Player Communication","id":"player-communication"},{"title":"Player Management","id":"player-management"},{"title":"Logging","id":"logging"},{"title":"Complete Example","id":"complete-example"}],"/storage":[{"title":"Basic Operations","id":"basic-operations"},{"title":"Key Structure","id":"key-structure"},{"title":"Atomic Operations","id":"atomic-operations"},{"title":"Data Models","id":"data-models"},{"title":"Data Management Patterns","id":"data-management-patterns"},{"title":"Complete Example","id":"complete-example"}],"/types":[{"title":"Core Types","id":"core-types"},{"title":"Authentication Types","id":"authentication-types"},{"title":"Decorator Types","id":"decorator-types"},{"title":"API Types","id":"api-types"},{"title":"Event Types","id":"event-types"},{"title":"Storage Types","id":"storage-types"},{"title":"WebSocket Types","id":"web-socket-types"},{"title":"Utility Types","id":"utility-types"},{"title":"Type Usage Example","id":"type-usage-example"}],"/utilities":[{"title":"Rate Limiting","id":"rate-limiting"},{"title":"Message Formatting","id":"message-formatting"},{"title":"Time Utilities","id":"time-utilities"},{"title":"Data Validation","id":"data-validation"},{"title":"Promise Utilities","id":"promise-utilities"},{"title":"Collection Utilities","id":"collection-utilities"},{"title":"Complete Example","id":"complete-example"}],"/websockets":[{"title":"Socket Basics","id":"socket-basics"},{"title":"Message Structure","id":"message-structure"},{"title":"Authentication","id":"authentication"},{"title":"Real-time Updates","id":"real-time-updates"},{"title":"Client Implementation","id":"client-implementation"},{"title":"Socket State Management","id":"socket-state-management"},{"title":"Complete Example","id":"complete-example"}],"/examples/basic-module":[{"title":"Complete Module","id":"complete-module"},{"title":"Module Breakdown","id":"module-breakdown"},{"title":"Usage Examples","id":"usage-examples"},{"title":"Key Concepts Demonstrated","id":"key-concepts-demonstrated"}],"/examples/chat":[{"title":"Complete Module","id":"complete-module"},{"title":"WebSocket Integration","id":"web-socket-integration"},{"title":"Usage Examples","id":"usage-examples"},{"title":"Key Features","id":"key-features"}],"/examples/economy":[{"title":"Complete Module","id":"complete-module"},{"title":"Key Features","id":"key-features"},{"title":"Usage Examples","id":"usage-examples"},{"title":"Key Concepts","id":"key-concepts"},{"title":"Common Patterns","id":"common-patterns"},{"title":"Extension Ideas","id":"extension-ideas"}],"/examples/player-stats":[{"title":"Complete Module","id":"complete-module"},{"title":"Stats Tracking","id":"stats-tracking"},{"title":"Usage","id":"usage"},{"title":"Event Handling","id":"event-handling"},{"title":"Web Integration","id":"web-integration"},{"title":"Key Features","id":"key-features"}]},"children":["$","$L15",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L16",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"absolute inset-0 -z-10 mx-0 max-w-none overflow-hidden","children":["$","div",null,{"className":"absolute left-1/2 top-0 ml-[-38rem] h-[25rem] w-[81.25rem] dark:[mask-image:linear-gradient(white,transparent)]","children":[["$","div",null,{"className":"absolute inset-0 bg-gradient-to-r from-[#fff] to-[#fff] opacity-40 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-[#000]/30 dark:to-[#000]/30 dark:opacity-100","children":["$","svg",null,{"aria-hidden":"true","className":"absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5","children":[["$","defs",null,{"children":["$","pattern",null,{"id":":S1:","width":72,"height":56,"patternUnits":"userSpaceOnUse","x":-12,"y":4,"children":["$","path",null,{"d":"M.5 56V.5H72","fill":"none"}]}]}],["$","rect",null,{"width":"100%","height":"100%","strokeWidth":0,"fill":"url(#:S1:)"}],["$","svg",null,{"x":-12,"y":4,"className":"overflow-visible","children":[["$","rect","4-3",{"strokeWidth":"0","width":73,"height":57,"x":288,"y":168}],["$","rect","2-1",{"strokeWidth":"0","width":73,"height":57,"x":144,"y":56}],["$","rect","7-3",{"strokeWidth":"0","width":73,"height":57,"x":504,"y":168}],["$","rect","10-6",{"strokeWidth":"0","width":73,"height":57,"x":720,"y":336}]]}]]}]}],["$","svg",null,{"viewBox":"0 0 1113 440","aria-hidden":"true","className":"absolute left-1/2 top-0 ml-[-19rem] w-[69.5625rem] fill-white blur-[26px] dark:hidden","children":["$","path",null,{"d":"M.016 439.5s-9.5-300 434-300S882.516 20 882.516 20V0h230.004v439.5H.016Z"}]}]]}]}],["$","div",null,{"className":"mx-auto flex h-full max-w-xl flex-col items-center justify-center py-16 text-center","children":[["$","p",null,{"className":" text-5xl font-semibold text-zinc-900 dark:text-white","children":"404"}],["$","h1",null,{"className":"mt-2 text-2xl font-bold text-zinc-900 dark:text-white","children":"Page not found"}],["$","p",null,{"className":"mt-2 text-base text-zinc-600 dark:text-zinc-400","children":"Sorry, we couldn’t find the page you’re looking for."}],["$","$L13",null,{"className":"inline-flex gap-0.5 justify-center overflow-hidden text-sm font-medium transition rounded-sm bg-zinc-900 py-1 px-3 text-white hover:bg-zinc-700 dark:bg-fuchsia-400/10 dark:text-fuchsia-400 dark:ring-1 dark:ring-inset dark:ring-fuchsia-400/20 dark:hover:bg-fuchsia-400/10 dark:hover:text-fuchsia-300 dark:hover:ring-fuchsia-300 mt-8","href":"/","children":[false,"Back to docs",["$","svg",null,{"viewBox":"0 0 20 20","fill":"none","aria-hidden":"true","className":"mt-0.5 h-5 w-5 -mr-1","children":["$","path",null,{"stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","d":"m11.5 6.5 3 3.5m0 0-3 3.5m3-3.5h-9"}]}]]}]]}]],"notFoundStyles":[],"styles":null}]}]}]}]}]}]
