"use strict";exports.id=905,exports.ids=[905],exports.modules={1229:(s,n,a)=>{a.d(n,{a:()=>I});var t={};a.r(t),a.d(t,{Button:()=>d.z,CodeGroup:()=>m,Col:()=>N,Note:()=>P,Properties:()=>L,Property:()=>_,Row:()=>U,a:()=>w,code:()=>f,h2:()=>b,pre:()=>g,wrapper:()=>j});var e=a(9824),o=a(6122),r=a(9378),i=a(4806);let l=(0,i.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Feedback.tsx`),{__esModule:c,$$typeof:p}=l;l.default;let h=(0,i.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Feedback.tsx#Feedback`);var k=a(8551);function y({as:s,className:n,...a}){return e.jsx(s??"div",{className:(0,r.Z)(n,"prose dark:prose-invert","[html_:where(&>*)]:mx-auto [html_:where(&>*)]:max-w-2xl [html_:where(&>*)]:lg:mx-[calc(50%-min(50%,theme(maxWidth.lg)))] [html_:where(&>*)]:lg:max-w-3xl"),...a})}var d=a(4479);let x=(0,i.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Code.tsx`),{__esModule:v,$$typeof:u}=x;x.default;let m=(0,i.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Code.tsx#CodeGroup`),f=(0,i.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Code.tsx#Code`),g=(0,i.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Code.tsx#Pre`),w=o.default;function j({children:s}){return(0,e.jsxs)("article",{className:"flex h-full flex-col pb-10 pt-16",children:[e.jsx(y,{className:"flex-auto",children:s}),e.jsx("footer",{className:"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl",children:e.jsx(h,{})})]})}let b=function(s){return e.jsx(k.X,{level:2,...s})};function D(s){return(0,e.jsxs)("svg",{viewBox:"0 0 16 16","aria-hidden":"true",...s,children:[e.jsx("circle",{cx:"8",cy:"8",r:"8",strokeWidth:"0"}),e.jsx("path",{fill:"none",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"1.5",d:"M6.75 7.75h1.5v3.5"}),e.jsx("circle",{cx:"8",cy:"4",r:".5",fill:"none"})]})}function P({children:s}){return(0,e.jsxs)("div",{className:"my-6 flex gap-2.5 rounded-sm border border-fuchsia-500/20 bg-fuchsia-50/50 p-4 leading-6 text-fuchsia-900 dark:border-fuchsia-500/30 dark:bg-fuchsia-500/5 dark:text-fuchsia-200 dark:[--tw-prose-links-hover:theme(colors.fuchsia.300)] dark:[--tw-prose-links:theme(colors.white)]",children:[e.jsx(D,{className:"mt-1 h-4 w-4 flex-none fill-fuchsia-500 stroke-white dark:fill-fuchsia-200/20 dark:stroke-fuchsia-200"}),e.jsx("div",{className:"[&>:first-child]:mt-0 [&>:last-child]:mb-0",children:s})]})}function U({children:s}){return e.jsx("div",{className:"grid grid-cols-1 items-start gap-x-16 gap-y-10 xl:max-w-none xl:grid-cols-2",children:s})}function N({children:s,sticky:n=!1}){return e.jsx("div",{className:(0,r.Z)("[&>:first-child]:mt-0 [&>:last-child]:mb-0",n&&"xl:sticky xl:top-24"),children:s})}function L({children:s}){return e.jsx("div",{className:"my-6",children:e.jsx("ul",{role:"list",className:"m-0 max-w-[calc(theme(maxWidth.lg)-theme(spacing.8))] list-none divide-y divide-zinc-900/5 p-0 dark:divide-white/5",children:s})})}function _({name:s,children:n,type:a}){return e.jsx("li",{className:"m-0 px-0 py-4 first:pt-0 last:pb-0",children:(0,e.jsxs)("dl",{className:"m-0 flex flex-wrap items-center gap-x-3 gap-y-2",children:[e.jsx("dt",{className:"sr-only",children:"Name"}),e.jsx("dd",{children:e.jsx("code",{children:s})}),a&&(0,e.jsxs)(e.Fragment,{children:[e.jsx("dt",{className:"sr-only",children:"Type"}),e.jsx("dd",{className:"font-mono text-xs text-zinc-400 dark:text-zinc-500",children:a})]}),e.jsx("dt",{className:"sr-only",children:"Description"}),e.jsx("dd",{className:"w-full flex-none [&>:first-child]:mt-0 [&>:last-child]:mb-0",children:n})]})})}function I(s){return{...s,...t}}},1108:(s,n,a)=>{/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var t=a(6510),e=Symbol.for("react.element"),o=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,i=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(s,n,a){var t,o={},c=null,p=null;for(t in void 0!==a&&(c=""+a),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(p=n.ref),n)r.call(n,t)&&!l.hasOwnProperty(t)&&(o[t]=n[t]);if(s&&s.defaultProps)for(t in n=s.defaultProps)void 0===o[t]&&(o[t]=n[t]);return{$$typeof:e,type:s,key:c,ref:p,props:o,_owner:i.current}}n.Fragment=o,n.jsx=c,n.jsxs=c},8686:(s,n,a)=>{s.exports=a(1108)},8551:(s,n,a)=>{a.d(n,{X:()=>i});var t=a(4806);let e=(0,t.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Heading.tsx`),{__esModule:o,$$typeof:r}=e;e.default;let i=(0,t.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Heading.tsx#Heading`)},9660:(s,n,a)=>{a.r(n),a.d(n,{default:()=>i,sections:()=>o});var t=a(8686),e=a(1229);let o=[{title:"Player and Entity Information Methods",id:"player-and-entity-information-methods"}];function r(s){let n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",p:"p",pre:"pre",...(0,e.a)(),...s.components};return(0,t.jsxs)(t.Fragment,{children:[t.jsx(n.h1,{children:"List and Information"}),"\n",t.jsx(n.p,{children:'Dive into the insights and details of your Minecraft world with the "List and Information" category of the "Enchanted" API. Easily list players and retrieve valuable data, providing an overview of in-game entities and player status.'}),"\n",t.jsx(n.h2,{id:"player-and-entity-information-methods",children:"Player and Entity Information Methods"}),"\n",t.jsx(n.h3,{children:"List Players"}),"\n",t.jsx(n.p,{children:"Retrieve a list of all players on the server."}),"\n",t.jsx(n.pre,{language:"typescript",code:"listPlayers(uuids: boolean = false): Promise<string>\n",children:t.jsx(n.code,{className:"language-typescript",children:'<span><span style="color: var(--shiki-token-function)">listPlayers</span><span style="color: var(--shiki-color-text)">(uuids: boolean </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">string</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'})}),"\n",t.jsx(n.h3,{children:"Entity Information (e.g., Entities, Blocks)"}),"\n",t.jsx(n.p,{children:"Query detailed information about entities and blocks in the game."}),"\n",t.jsx(n.pre,{language:"typescript",code:"// Example method names\ngetData(target: 'entity' | 'block' | 'storage', targetPosOrUuid: string, path?: string, scale?: number): Promise<string | undefined>\n",children:t.jsx(n.code,{className:"language-typescript",children:'<span><span style="color: var(--shiki-token-comment)">// Example method names</span></span>\n<span><span style="color: var(--shiki-token-function)">getData</span><span style="color: var(--shiki-color-text)">(target: </span><span style="color: var(--shiki-token-string-expression)">&#39;entity&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;block&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;storage&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> targetPosOrUuid: string</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> path</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> string</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> scale</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> number): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">string </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'})}),"\n",t.jsx(n.h4,{children:"Example Usage"}),"\n",t.jsx(n.h5,{children:"List Players"}),"\n",t.jsx(n.p,{children:"Get a list of all players currently online:"}),"\n",t.jsx(n.pre,{language:"typescript",code:"// List players without UUIDs\nconst playersList = await api.listPlayers();\nconsole.log('Players online:', playersList);\n\n// List players with UUIDs\nconst playersListWithUuids = await api.listPlayers(true);\nconsole.log('Players and UUIDs:', playersListWithUuids);\n",children:t.jsx(n.code,{className:"language-typescript",children:'<span><span style="color: var(--shiki-token-comment)">// List players without UUIDs</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">playersList</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.listPlayers</span><span style="color: var(--shiki-color-text)">();</span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Players online:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> playersList);</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// List players with UUIDs</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">playersListWithUuids</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.listPlayers</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Players and UUIDs:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> playersListWithUuids);</span></span>\n<span></span>'})}),"\n",t.jsx(n.h5,{children:"Entity Information"}),"\n",t.jsx(n.p,{children:"Fetch and display information about a specific entity:"}),"\n",t.jsx(n.pre,{language:"typescript",code:"// Get data about a specific block\nconst blockData = await api.getData('block', '123 64 123');\nconsole.log('Block Data:', blockData);\n\n// Get data about an entity with UUID\nconst entityData = await api.getData('entity', 'acb123d4-6678-4e21-9abc-d4e56789dbca');\nconsole.log('Entity Data:', entityData);\n",children:t.jsx(n.code,{className:"language-typescript",children:'<span><span style="color: var(--shiki-token-comment)">// Get data about a specific block</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">blockData</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.getData</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;block&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;123 64 123&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Block Data:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> blockData);</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Get data about an entity with UUID</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">entityData</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.getData</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;entity&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;acb123d4-6678-4e21-9abc-d4e56789dbca&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Entity Data:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> entityData);</span></span>\n<span></span>'})}),"\n",t.jsx(n.h3,{children:"Utility"}),"\n",t.jsx(n.p,{children:'The "List and Information" category also features utility methods that can be extremely powerful when creating plugins that need to perform read operations on the numerous entities that exist within the Minecraft server.'})]})}function i(s={}){let{wrapper:n}={...(0,e.a)(),...s.components};return n?t.jsx(n,{...s,children:t.jsx(r,{...s})}):r(s)}}};