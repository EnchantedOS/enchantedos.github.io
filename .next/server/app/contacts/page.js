(()=>{var s={};s.id=613,s.ids=[613,4],s.modules={7849:s=>{"use strict";s.exports=require("next/dist/client/components/action-async-storage.external")},2934:s=>{"use strict";s.exports=require("next/dist/client/components/action-async-storage.external.js")},5403:s=>{"use strict";s.exports=require("next/dist/client/components/request-async-storage.external")},4580:s=>{"use strict";s.exports=require("next/dist/client/components/request-async-storage.external.js")},4749:s=>{"use strict";s.exports=require("next/dist/client/components/static-generation-async-storage.external")},5869:s=>{"use strict";s.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:s=>{"use strict";s.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},2361:s=>{"use strict";s.exports=require("events")},7147:s=>{"use strict";s.exports=require("fs")},2037:s=>{"use strict";s.exports=require("os")},1017:s=>{"use strict";s.exports=require("path")},2781:s=>{"use strict";s.exports=require("stream")},7310:s=>{"use strict";s.exports=require("url")},3837:s=>{"use strict";s.exports=require("util")},1267:s=>{"use strict";s.exports=require("worker_threads")},4981:(s,e,n)=>{"use strict";n.r(e),n.d(e,{GlobalError:()=>o.a,__next_app__:()=>h,originalPathname:()=>d,pages:()=>c,routeModule:()=>k,tree:()=>p});var t=n(5513),a=n(623),r=n(4053),o=n.n(r),i=n(5415),l={};for(let s in i)0>["default","tree","pages","GlobalError","originalPathname","__next_app__","routeModule"].indexOf(s)&&(l[s]=()=>i[s]);n.d(e,l);let p=["",{children:["contacts",{children:["__PAGE__",{},{page:[()=>Promise.resolve().then(n.bind(n,8004)),"/Users/janis/Desktop/enchanted-docs/src/app/contacts/page.mdx"]}]},{metadata:{icon:[async s=>(await Promise.resolve().then(n.bind(n,8212))).default(s)],apple:[],openGraph:[],twitter:[],manifest:void 0}}]},{layout:[()=>Promise.resolve().then(n.bind(n,546)),"/Users/janis/Desktop/enchanted-docs/src/app/layout.tsx"],"not-found":[()=>Promise.resolve().then(n.bind(n,1945)),"/Users/janis/Desktop/enchanted-docs/src/app/not-found.tsx"],metadata:{icon:[async s=>(await Promise.resolve().then(n.bind(n,8212))).default(s)],apple:[],openGraph:[],twitter:[],manifest:void 0}}],c=["/Users/janis/Desktop/enchanted-docs/src/app/contacts/page.mdx"],d="/contacts/page",h={require:n,loadChunk:()=>Promise.resolve()},k=new t.AppPageRouteModule({definition:{kind:a.x.APP_PAGE,page:"/contacts/page",pathname:"/contacts",bundlePath:"",filename:"",appPaths:[]},userland:{loaderTree:p}})},3524:(s,e,n)=>{Promise.resolve().then(n.t.bind(n,3655,23)),Promise.resolve().then(n.bind(n,8512)),Promise.resolve().then(n.bind(n,2866)),Promise.resolve().then(n.bind(n,1289))},1229:(s,e,n)=>{"use strict";n.d(e,{a:()=>S});var t={};n.r(t),n.d(t,{Button:()=>y.z,CodeGroup:()=>m,Col:()=>D,Note:()=>b,Properties:()=>G,Property:()=>M,Row:()=>N,a:()=>j,code:()=>g,h2:()=>P,pre:()=>f,wrapper:()=>w});var a=n(9824),r=n(6122),o=n(9378),i=n(4806);let l=(0,i.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Feedback.tsx`),{__esModule:p,$$typeof:c}=l;l.default;let d=(0,i.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Feedback.tsx#Feedback`);var h=n(8551);function k({as:s,className:e,...n}){return a.jsx(s??"div",{className:(0,o.Z)(e,"prose dark:prose-invert","[html_:where(&>*)]:mx-auto [html_:where(&>*)]:max-w-2xl [html_:where(&>*)]:lg:mx-[calc(50%-min(50%,theme(maxWidth.lg)))] [html_:where(&>*)]:lg:max-w-3xl"),...n})}var y=n(4479);let x=(0,i.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Code.tsx`),{__esModule:u,$$typeof:v}=x;x.default;let m=(0,i.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Code.tsx#CodeGroup`),g=(0,i.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Code.tsx#Code`),f=(0,i.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Code.tsx#Pre`),j=r.default;function w({children:s}){return(0,a.jsxs)("article",{className:"flex h-full flex-col pb-10 pt-16",children:[a.jsx(k,{className:"flex-auto",children:s}),a.jsx("footer",{className:"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl",children:a.jsx(d,{})})]})}let P=function(s){return a.jsx(h.X,{level:2,...s})};function _(s){return(0,a.jsxs)("svg",{viewBox:"0 0 16 16","aria-hidden":"true",...s,children:[a.jsx("circle",{cx:"8",cy:"8",r:"8",strokeWidth:"0"}),a.jsx("path",{fill:"none",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"1.5",d:"M6.75 7.75h1.5v3.5"}),a.jsx("circle",{cx:"8",cy:"4",r:".5",fill:"none"})]})}function b({children:s}){return(0,a.jsxs)("div",{className:"my-6 flex gap-2.5 rounded-sm border border-fuchsia-500/20 bg-fuchsia-50/50 p-4 leading-6 text-fuchsia-900 dark:border-fuchsia-500/30 dark:bg-fuchsia-500/5 dark:text-fuchsia-200 dark:[--tw-prose-links-hover:theme(colors.fuchsia.300)] dark:[--tw-prose-links:theme(colors.white)]",children:[a.jsx(_,{className:"mt-1 h-4 w-4 flex-none fill-fuchsia-500 stroke-white dark:fill-fuchsia-200/20 dark:stroke-fuchsia-200"}),a.jsx("div",{className:"[&>:first-child]:mt-0 [&>:last-child]:mb-0",children:s})]})}function N({children:s}){return a.jsx("div",{className:"grid grid-cols-1 items-start gap-x-16 gap-y-10 xl:max-w-none xl:grid-cols-2",children:s})}function D({children:s,sticky:e=!1}){return a.jsx("div",{className:(0,o.Z)("[&>:first-child]:mt-0 [&>:last-child]:mb-0",e&&"xl:sticky xl:top-24"),children:s})}function G({children:s}){return a.jsx("div",{className:"my-6",children:a.jsx("ul",{role:"list",className:"m-0 max-w-[calc(theme(maxWidth.lg)-theme(spacing.8))] list-none divide-y divide-zinc-900/5 p-0 dark:divide-white/5",children:s})})}function M({name:s,children:e,type:n}){return a.jsx("li",{className:"m-0 px-0 py-4 first:pt-0 last:pb-0",children:(0,a.jsxs)("dl",{className:"m-0 flex flex-wrap items-center gap-x-3 gap-y-2",children:[a.jsx("dt",{className:"sr-only",children:"Name"}),a.jsx("dd",{children:a.jsx("code",{children:s})}),n&&(0,a.jsxs)(a.Fragment,{children:[a.jsx("dt",{className:"sr-only",children:"Type"}),a.jsx("dd",{className:"font-mono text-xs text-zinc-400 dark:text-zinc-500",children:n})]}),a.jsx("dt",{className:"sr-only",children:"Description"}),a.jsx("dd",{className:"w-full flex-none [&>:first-child]:mt-0 [&>:last-child]:mb-0",children:e})]})})}function S(s){return{...s,...t}}},1108:(s,e,n)=>{"use strict";/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var t=n(6510),a=Symbol.for("react.element"),r=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,i=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function p(s,e,n){var t,r={},p=null,c=null;for(t in void 0!==n&&(p=""+n),void 0!==e.key&&(p=""+e.key),void 0!==e.ref&&(c=e.ref),e)o.call(e,t)&&!l.hasOwnProperty(t)&&(r[t]=e[t]);if(s&&s.defaultProps)for(t in e=s.defaultProps)void 0===r[t]&&(r[t]=e[t]);return{$$typeof:a,type:s,key:p,ref:c,props:r,_owner:i.current}}e.Fragment=r,e.jsx=p,e.jsxs=p},8686:(s,e,n)=>{"use strict";s.exports=n(1108)},8551:(s,e,n)=>{"use strict";n.d(e,{X:()=>i});var t=n(4806);let a=(0,t.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Heading.tsx`),{__esModule:r,$$typeof:o}=a;a.default;let i=(0,t.createProxy)(String.raw`/Users/janis/Desktop/enchanted-docs/src/components/Heading.tsx#Heading`)},8004:(s,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>i,sections:()=>r});var t=n(8686),a=n(1229);let r=[{title:"Game Modes",id:"game-modes"},{title:"Game Rules",id:"game-rules"}];function o(s){let e={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.a)(),...s.components};return(0,t.jsxs)(t.Fragment,{children:[t.jsx(e.h1,{children:"Game Rules and Modes"}),"\n",t.jsx(e.p,{children:'Master control over your Minecraft server\'s rules and modes to fine-tune the gameplay experience. The "Enchanted" API\'s "Game Rules and Modes" category provides server-side methods to configure essential game settings through your plugins. This versatility allows for custom game modes and rule enforcement.'}),"\n",t.jsx(e.h2,{id:"game-modes",children:"Game Modes"}),"\n",t.jsx(e.h3,{children:"Default Game Mode"}),"\n",t.jsx(e.p,{children:"Set the server's default game mode for new players."}),"\n",t.jsx(e.pre,{language:"typescript",code:"setDefaultGameMode(mode: 'survival' | 'creative' | 'adventure' | 'spectator'): Promise<void>\n",children:t.jsx(e.code,{className:"language-typescript",children:'<span><span style="color: var(--shiki-token-function)">setDefaultGameMode</span><span style="color: var(--shiki-color-text)">(mode: </span><span style="color: var(--shiki-token-string-expression)">&#39;survival&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;creative&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;adventure&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;spectator&#39;</span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;void&gt;</span></span>\n<span></span>'})}),"\n",t.jsx(e.h3,{children:"Player Game Mode"}),"\n",t.jsx(e.p,{children:"Change the game mode for a specific player or set of players."}),"\n",t.jsx(e.pre,{language:"typescript",code:"setGameMode(gamemode: string, target: string = '@s'): Promise<void>\n",children:t.jsx(e.code,{className:"language-typescript",children:'<span><span style="color: var(--shiki-token-function)">setGameMode</span><span style="color: var(--shiki-color-text)">(gamemode: string</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> target: string </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@s&#39;</span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;void&gt;</span></span>\n<span></span>'})}),"\n",t.jsx(e.h2,{id:"game-rules",children:"Game Rules"}),"\n",t.jsx(e.h3,{children:"Set Difficulty"}),"\n",t.jsx(e.p,{children:"Adjust the server's difficulty level."}),"\n",t.jsx(e.pre,{language:"typescript",code:"setDifficulty(difficulty: string): Promise<boolean>\n",children:t.jsx(e.code,{className:"language-typescript",children:'<span><span style="color: var(--shiki-token-function)">setDifficulty</span><span style="color: var(--shiki-color-text)">(difficulty: string): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">boolean</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'})}),"\n",t.jsx(e.h3,{children:"Modify Experience"}),"\n",t.jsx(e.p,{children:"Modify experience points or levels for players."}),"\n",t.jsx(e.pre,{language:"typescript",code:"experience(\n    action: 'add' | 'set' | 'query',\n    target: string,\n    amount?: number,\n    type: 'levels' | 'points' = 'points'\n): Promise<string>\n",children:t.jsx(e.code,{className:"language-typescript",children:'<span><span style="color: var(--shiki-token-function)">experience</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">    action: </span><span style="color: var(--shiki-token-string-expression)">&#39;add&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;set&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;query&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    target: string</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    amount</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> number</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    type: </span><span style="color: var(--shiki-token-string-expression)">&#39;levels&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;points&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;points&#39;</span></span>\n<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">string</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'})}),"\n",t.jsx(e.h3,{children:"Usage and Code Examples"}),"\n",t.jsx(e.h4,{children:"Set Default Game Mode"}),"\n",t.jsx(e.pre,{language:"typescript",code:"// Set default game mode to creative\nawait api.setDefaultGameMode('creative');\n",children:t.jsx(e.code,{className:"language-typescript",children:'<span><span style="color: var(--shiki-token-comment)">// Set default game mode to creative</span></span>\n<span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.setDefaultGameMode</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;creative&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>\n<span></span>'})}),"\n",t.jsx(e.h4,{children:"Change Player Game Mode"}),"\n",t.jsx(e.pre,{language:"typescript",code:"// Change game mode for all players to survival\nawait api.setGameMode('survival', '@a');\n",children:t.jsx(e.code,{className:"language-typescript",children:'<span><span style="color: var(--shiki-token-comment)">// Change game mode for all players to survival</span></span>\n<span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.setGameMode</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;survival&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@a&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>\n<span></span>'})}),"\n",t.jsx(e.h4,{children:"Set Difficulty Level"}),"\n",t.jsx(e.pre,{language:"typescript",code:"// Set server difficulty to hard\nconst success = await api.setDifficulty('hard');\nif (success) {\n  console.log('Difficulty set to hard successfully.');\n}\n",children:t.jsx(e.code,{className:"language-typescript",children:'<span><span style="color: var(--shiki-token-comment)">// Set server difficulty to hard</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">success</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.setDifficulty</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;hard&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (success) {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Difficulty set to hard successfully.&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'})}),"\n",t.jsx(e.h4,{children:"Adjust Player Experience"}),"\n",t.jsx(e.pre,{language:"typescript",code:"// Add experience points to a player\nawait api.experience('add', 'PlayerName', 500, 'points');\n\n// Set a player's experience level\nawait api.experience('set', 'PlayerName', 20, 'levels');\n",children:t.jsx(e.code,{className:"language-typescript",children:'<span><span style="color: var(--shiki-token-comment)">// Add experience points to a player</span></span>\n<span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.experience</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;add&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;PlayerName&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">500</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;points&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set a player&#39;s experience level</span></span>\n<span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-token-function)">.experience</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;set&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;PlayerName&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">20</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;levels&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>\n<span></span>'})}),"\n",t.jsx(e.p,{children:"These methods enable your plugin to interact with core gameplay mechanics, offering flexibility for custom scenarios and server management. For actual use, ensure that the permissions and conditions are appropriately checked before altering game settings."})]})}function i(s={}){let{wrapper:e}={...(0,a.a)(),...s.components};return e?t.jsx(e,{...s,children:t.jsx(o,{...s})}):o(s)}}};var e=require("../../webpack-runtime.js");e.C(s);var n=s=>e(e.s=s),t=e.X(0,[722,171,900],()=>n(4981));module.exports=t})();